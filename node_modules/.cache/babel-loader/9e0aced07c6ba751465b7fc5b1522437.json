{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/jesse/Desktop/blockx/bumodapp/node_modules/@babel/runtime/regenerator\");\n\nvar wrap = require('co-wrap-all');\n\nvar is = require('is-type-of');\n\nvar merge = require('merge-descriptors');\n\nvar long = require('long');\n\nvar JSONbig = require('json-bigint');\n\nvar humps = require('humps');\n\nvar _require = require('bumo-encryption'),\n    keypair = _require.keypair;\n\nvar errors = require('../exception');\n\nmodule.exports = Contract;\n\nfunction Contract(options) {\n  if (!(this instanceof Contract)) {\n    return new Contract(options);\n  }\n\n  this.options = options;\n}\n\nvar proto = Contract.prototype;\nmerge(proto, require('../common/util'));\nproto.getInfo =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee(contractAddress) {\n  var addressStatus, res, result;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (keypair.checkAddress(contractAddress)) {\n            _context.next = 2;\n            break;\n          }\n\n          return _context.abrupt(\"return\", this._responseError(errors.INVALID_CONTRACTADDRESS_ERROR));\n\n        case 2:\n          _context.next = 4;\n          return this.checkValid(contractAddress);\n\n        case 4:\n          addressStatus = _context.sent;\n\n          if (!(addressStatus.errorCode !== 0 || !addressStatus.result.isValid)) {\n            _context.next = 7;\n            break;\n          }\n\n          return _context.abrupt(\"return\", this._responseError(errors.CONTRACTADDRESS_NOT_CONTRACTACCOUNT_ERROR));\n\n        case 7:\n          _context.next = 9;\n          return this._request('get', 'getAccount', {\n            address: contractAddress\n          });\n\n        case 9:\n          res = _context.sent;\n\n          if (!(res.error_code !== 0)) {\n            _context.next = 12;\n            break;\n          }\n\n          return _context.abrupt(\"return\", this._responseError(errors.ACCOUNT_NOT_EXIST));\n\n        case 12:\n          result = res.result;\n\n          if (!(result.contract && result.contract.payload)) {\n            _context.next = 15;\n            break;\n          }\n\n          return _context.abrupt(\"return\", this._responseData({\n            contract: {\n              type: 0,\n              payload: result.contract.payload\n            }\n          }));\n\n        case 15:\n          return _context.abrupt(\"return\", this._responseData(this._responseError(errors.INVALID_CONTRACT_HASH_ERROR)));\n\n        case 16:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee, this);\n});\nproto.checkValid =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee2(contractAddress) {\n  var data, result;\n  return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          if (keypair.checkAddress(contractAddress)) {\n            _context2.next = 2;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", this._responseError(errors.INVALID_CONTRACTADDRESS_ERROR));\n\n        case 2:\n          _context2.next = 4;\n          return this._request('get', 'getAccount', {\n            address: contractAddress\n          });\n\n        case 4:\n          data = _context2.sent;\n\n          if (!(data.error_code !== 0)) {\n            _context2.next = 7;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", this._responseError(errors.ACCOUNT_NOT_EXIST));\n\n        case 7:\n          result = data.result;\n\n          if (!result.contract) {\n            _context2.next = 10;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", this._responseData({\n            isValid: true\n          }));\n\n        case 10:\n          return _context2.abrupt(\"return\", this._responseData({\n            isValid: false\n          }));\n\n        case 11:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _callee2, this);\n});\nproto.call =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee3(args) {\n  var schema, msg, isContractAddress, data, info;\n  return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n\n          if (!(is.array(args) || !is.object(args))) {\n            _context3.next = 3;\n            break;\n          }\n\n          return _context3.abrupt(\"return\", this._responseError(errors.INVALID_ARGUMENTS));\n\n        case 3:\n          schema = {\n            contractAddress: {\n              required: false,\n              address: true\n            },\n            sourceAddress: {\n              required: false,\n              address: true\n            },\n            code: {\n              required: false,\n              string: true\n            },\n            input: {\n              required: false,\n              string: true\n            },\n            contractBalance: {\n              required: false,\n              numeric: true\n            },\n            feeLimit: {\n              required: false,\n              numeric: true\n            },\n            gasPrice: {\n              required: false,\n              numeric: true\n            }\n          };\n\n          if (this._validate(args, schema).tag) {\n            _context3.next = 7;\n            break;\n          }\n\n          msg = this._validate(args, schema).msg;\n          return _context3.abrupt(\"return\", this._responseError(errors[msg]));\n\n        case 7:\n          if ([0, 1, 2].includes(args.optType)) {\n            _context3.next = 9;\n            break;\n          }\n\n          return _context3.abrupt(\"return\", this._responseError(errors.INVALID_OPTTYPE_ERROR));\n\n        case 9:\n          if (!(!args.contractAddress && !args.code)) {\n            _context3.next = 11;\n            break;\n          }\n\n          return _context3.abrupt(\"return\", this._responseError(errors.CONTRACTADDRESS_CODE_BOTH_NULL_ERROR));\n\n        case 11:\n          _context3.next = 13;\n          return this._isContractAddress(args.contractAddress);\n\n        case 13:\n          isContractAddress = _context3.sent;\n\n          if (isContractAddress) {\n            _context3.next = 16;\n            break;\n          }\n\n          return _context3.abrupt(\"return\", this._responseError(errors.INVALID_CONTRACTADDRESS_ERROR));\n\n        case 16:\n          args = humps.decamelizeKeys(args, {\n            separator: '_'\n          }); // convert long to int\n\n          args = this._longToInt(args);\n          data = JSONbig.stringify(args);\n          _context3.next = 21;\n          return this._request('post', 'callContract', data);\n\n        case 21:\n          info = _context3.sent;\n\n          if (!(info.error_code === 0)) {\n            _context3.next = 24;\n            break;\n          }\n\n          return _context3.abrupt(\"return\", this._responseData(info.result));\n\n        case 24:\n          return _context3.abrupt(\"return\", this._responseData(info));\n\n        case 27:\n          _context3.prev = 27;\n          _context3.t0 = _context3[\"catch\"](0);\n          throw _context3.t0;\n\n        case 30:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _callee3, this, [[0, 27]]);\n});\nproto.getAddress =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee4(hash) {\n  var schema, args, msg, accountInfo, contractAddressList, account, info;\n  return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          schema = {\n            hash: {\n              required: true,\n              string: true\n            }\n          };\n          args = {\n            hash: hash\n          };\n\n          if (this._validate(args, schema).tag) {\n            _context4.next = 6;\n            break;\n          }\n\n          msg = this._validate(args, schema).msg;\n          return _context4.abrupt(\"return\", this._responseError(errors.INVALID_HASH_ERROR));\n\n        case 6:\n          _context4.next = 8;\n          return this._request('get', 'getTransactionHistory', {\n            hash: hash\n          });\n\n        case 8:\n          accountInfo = _context4.sent;\n          contractAddressList = [];\n\n          if (!(accountInfo.error_code === 0 && accountInfo.result.transactions && accountInfo.result.transactions.length > 0)) {\n            _context4.next = 14;\n            break;\n          }\n\n          account = accountInfo.result.transactions[0];\n\n          if (account.error_desc) {\n            info = JSON.parse(account.error_desc);\n\n            if (is.array(info) && info.length > 0) {\n              info.forEach(function (item) {\n                contractAddressList.push(item);\n              });\n            }\n          }\n\n          return _context4.abrupt(\"return\", this._responseData({\n            contractAddressList: contractAddressList\n          }));\n\n        case 14:\n          return _context4.abrupt(\"return\", this._responseData({\n            contractAddressList: contractAddressList\n          }));\n\n        case 17:\n          _context4.prev = 17;\n          _context4.t0 = _context4[\"catch\"](0);\n          throw _context4.t0;\n\n        case 20:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _callee4, this, [[0, 17]]);\n});\nwrap(proto);","map":null,"metadata":{},"sourceType":"script"}