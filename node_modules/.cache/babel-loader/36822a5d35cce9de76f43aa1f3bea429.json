{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/jesse/Desktop/blockx/bumodapp/node_modules/@babel/runtime/regenerator\");\n\nvar wrap = require('co-wrap-all');\n\nvar is = require('is-type-of');\n\nvar merge = require('merge-descriptors');\n\nvar humps = require('humps');\n\nvar errors = require('../exception');\n\nmodule.exports = Block;\n\nfunction Block(options) {\n  if (!(this instanceof Block)) {\n    return new Block(options);\n  }\n\n  this.options = options;\n}\n\nvar proto = Block.prototype;\nmerge(proto, require('../common/util'));\nproto.getNumber =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee() {\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return this._getBlockNumber();\n\n        case 3:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 6:\n          _context.prev = 6;\n          _context.t0 = _context[\"catch\"](0);\n          throw _context.t0;\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee, this, [[0, 6]]);\n});\nproto.checkStatus =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee2() {\n  var data, info;\n  return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return this._request('get', 'getModulesStatus');\n\n        case 3:\n          data = _context2.sent;\n          info = data.ledger_manager;\n\n          if (!(info.chain_max_ledger_seq === info.ledger_sequence)) {\n            _context2.next = 7;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", this._responseData({\n            isSynchronous: true\n          }));\n\n        case 7:\n          return _context2.abrupt(\"return\", this._responseData({\n            isSynchronous: false\n          }));\n\n        case 10:\n          _context2.prev = 10;\n          _context2.t0 = _context2[\"catch\"](0);\n          throw _context2.t0;\n\n        case 13:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _callee2, this, [[0, 10]]);\n});\nproto.getTransactions =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee3(blockNumber) {\n  var data;\n  return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n\n          if (this._verifyValue(blockNumber)) {\n            _context3.next = 3;\n            break;\n          }\n\n          return _context3.abrupt(\"return\", this._responseError(errors.INVALID_BLOCKNUMBER_ERROR));\n\n        case 3:\n          _context3.next = 5;\n          return this._request('get', 'getTransactionHistory', {\n            ledger_seq: blockNumber\n          });\n\n        case 5:\n          data = _context3.sent;\n\n          if (!(data.error_code === 0)) {\n            _context3.next = 8;\n            break;\n          }\n\n          return _context3.abrupt(\"return\", this._responseData(data.result));\n\n        case 8:\n          if (!(data.error_code === 4)) {\n            _context3.next = 10;\n            break;\n          }\n\n          return _context3.abrupt(\"return\", this._responseError(errors.QUERY_RESULT_NOT_EXIST, data.result));\n\n        case 10:\n          return _context3.abrupt(\"return\", this._responseError(errors.FAIL));\n\n        case 13:\n          _context3.prev = 13;\n          _context3.t0 = _context3[\"catch\"](0);\n          throw _context3.t0;\n\n        case 16:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _callee3, this, [[0, 13]]);\n});\nproto.getInfo =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee4(blockNumber) {\n  var data, info, header, closeTime, number, txCount, version;\n  return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n\n          if (this._verifyValue(blockNumber)) {\n            _context4.next = 3;\n            break;\n          }\n\n          return _context4.abrupt(\"return\", this._responseError(errors.INVALID_BLOCKNUMBER_ERROR));\n\n        case 3:\n          _context4.next = 5;\n          return this._request('get', 'getLedger', {\n            seq: blockNumber\n          });\n\n        case 5:\n          data = _context4.sent;\n\n          if (!(data.error_code === 0)) {\n            _context4.next = 10;\n            break;\n          }\n\n          info = {};\n\n          if (data.result && data.result.header) {\n            header = data.result.header;\n            closeTime = header.close_time || '';\n            number = header.seq;\n            txCount = header.tx_count || '';\n            version = header.version || '';\n            info = {\n              closeTime: closeTime,\n              number: number,\n              txCount: txCount,\n              version: version\n            };\n          }\n\n          return _context4.abrupt(\"return\", this._responseData(info));\n\n        case 10:\n          if (!(data.error_code === 4)) {\n            _context4.next = 12;\n            break;\n          }\n\n          return _context4.abrupt(\"return\", this._responseError(errors.QUERY_RESULT_NOT_EXIST, data.result));\n\n        case 12:\n          return _context4.abrupt(\"return\", this._responseError(errors.FAIL));\n\n        case 15:\n          _context4.prev = 15;\n          _context4.t0 = _context4[\"catch\"](0);\n          throw _context4.t0;\n\n        case 18:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _callee4, this, [[0, 15]]);\n});\nproto.getLatestInfo =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee5() {\n  var data, info, header, closeTime, number, txCount, version;\n  return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return this._request('get', 'getLedger');\n\n        case 3:\n          data = _context5.sent;\n\n          if (!(data.error_code === 0)) {\n            _context5.next = 8;\n            break;\n          }\n\n          info = {};\n\n          if (data.result && data.result.header) {\n            header = data.result.header;\n            closeTime = header.close_time || '';\n            number = header.seq;\n            txCount = header.tx_count || '';\n            version = header.version || '';\n            info = {\n              closeTime: closeTime,\n              number: number,\n              txCount: txCount,\n              version: version\n            };\n          }\n\n          return _context5.abrupt(\"return\", this._responseData(info));\n\n        case 8:\n          if (!(data.error_code === 4)) {\n            _context5.next = 10;\n            break;\n          }\n\n          return _context5.abrupt(\"return\", this._responseError(errors.QUERY_RESULT_NOT_EXIST, data.result));\n\n        case 10:\n          return _context5.abrupt(\"return\", this._responseError(errors.FAIL));\n\n        case 13:\n          _context5.prev = 13;\n          _context5.t0 = _context5[\"catch\"](0);\n          throw _context5.t0;\n\n        case 16:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _callee5, this, [[0, 13]]);\n});\nproto.getValidators =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee6(blockNumber) {\n  var data, validatorsInfo, validators;\n  return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n\n          if (this._verifyValue(blockNumber)) {\n            _context6.next = 3;\n            break;\n          }\n\n          return _context6.abrupt(\"return\", this._responseError(errors.INVALID_BLOCKNUMBER_ERROR));\n\n        case 3:\n          _context6.next = 5;\n          return this._request('get', 'getLedger', {\n            seq: blockNumber,\n            with_validator: true\n          });\n\n        case 5:\n          data = _context6.sent;\n\n          if (!(data.error_code === 0)) {\n            _context6.next = 12;\n            break;\n          }\n\n          validatorsInfo = data.result.validators;\n          validators = [];\n\n          if (!is.array(validatorsInfo) && validatorsInfo.length === 0) {\n            validators = [];\n          } // [{a_b: 'demo'}] => [{aB: 'demo'}]\n          // validatorsInfo = humps.camelizeKeys(validatorsInfo);\n\n\n          validatorsInfo.forEach(function (item) {\n            if (!item.pledge_coin_amount) {\n              item.pledge_coin_amount = '0';\n            }\n\n            validators.push(item);\n          });\n          return _context6.abrupt(\"return\", this._responseData({\n            validators: validators\n          }));\n\n        case 12:\n          if (!(data.error_code === 4)) {\n            _context6.next = 14;\n            break;\n          }\n\n          return _context6.abrupt(\"return\", this._responseError(errors.QUERY_RESULT_NOT_EXIST, data.result));\n\n        case 14:\n          return _context6.abrupt(\"return\", this._responseError(errors.FAIL));\n\n        case 17:\n          _context6.prev = 17;\n          _context6.t0 = _context6[\"catch\"](0);\n          throw _context6.t0;\n\n        case 20:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _callee6, this, [[0, 17]]);\n});\nproto.getLatestValidators =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee7() {\n  var data, validatorsInfo, validators;\n  return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          _context7.next = 3;\n          return this._request('get', 'getLedger', {\n            with_validator: true\n          });\n\n        case 3:\n          data = _context7.sent;\n\n          if (!(data.error_code === 0)) {\n            _context7.next = 10;\n            break;\n          }\n\n          validatorsInfo = data.result.validators;\n          validators = [];\n\n          if (!is.array(validatorsInfo) && validatorsInfo.length === 0) {\n            validators = [];\n          } // [{a_b: 'demo'}] => [{aB: 'demo'}]\n          // validatorsInfo = humps.camelizeKeys(validatorsInfo);\n\n\n          validatorsInfo.forEach(function (item) {\n            if (!item.pledge_coin_amount) {\n              item.pledge_coin_amount = '0';\n            }\n\n            validators.push(item);\n          });\n          return _context7.abrupt(\"return\", this._responseData({\n            validators: validators\n          }));\n\n        case 10:\n          if (!(data.error_code === 4)) {\n            _context7.next = 12;\n            break;\n          }\n\n          return _context7.abrupt(\"return\", this._responseError(errors.QUERY_RESULT_NOT_EXIST, data.result));\n\n        case 12:\n          return _context7.abrupt(\"return\", this._responseError(errors.FAIL));\n\n        case 15:\n          _context7.prev = 15;\n          _context7.t0 = _context7[\"catch\"](0);\n          throw _context7.t0;\n\n        case 18:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _callee7, this, [[0, 15]]);\n});\nproto.getReward =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee8(blockNumber) {\n  var data, result, blockReward, validatorsReward, validatorItems, keys;\n  return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.prev = 0;\n\n          if (this._verifyValue(blockNumber)) {\n            _context8.next = 3;\n            break;\n          }\n\n          return _context8.abrupt(\"return\", this._responseError(errors.INVALID_BLOCKNUMBER_ERROR));\n\n        case 3:\n          _context8.next = 5;\n          return this._request('get', 'getLedger', {\n            seq: blockNumber,\n            with_block_reward: true\n          });\n\n        case 5:\n          data = _context8.sent;\n\n          if (!(data.error_code === 0)) {\n            _context8.next = 14;\n            break;\n          }\n\n          // console.log(data)\n          result = data.result;\n          blockReward = result.block_reward;\n          validatorsReward = result.validators_reward;\n          validatorItems = [];\n          keys = Object.keys(validatorsReward);\n\n          if (keys.length > 0) {\n            keys.forEach(function (item) {\n              validatorItems.push({\n                validator: item,\n                reward: validatorsReward[item]\n              });\n            });\n          }\n\n          return _context8.abrupt(\"return\", this._responseData({\n            blockReward: blockReward,\n            validatorsReward: validatorItems\n          }));\n\n        case 14:\n          if (!(data.error_code === 4)) {\n            _context8.next = 16;\n            break;\n          }\n\n          return _context8.abrupt(\"return\", this._responseError(errors.QUERY_RESULT_NOT_EXIST, data.result));\n\n        case 16:\n          return _context8.abrupt(\"return\", this._responseError(errors.FAIL));\n\n        case 19:\n          _context8.prev = 19;\n          _context8.t0 = _context8[\"catch\"](0);\n          throw _context8.t0;\n\n        case 22:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _callee8, this, [[0, 19]]);\n});\nproto.getLatestReward =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee9() {\n  var data, result, blockReward, validatorsReward, validatorItems, keys;\n  return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.prev = 0;\n          _context9.next = 3;\n          return this._request('get', 'getLedger', {\n            with_block_reward: true\n          });\n\n        case 3:\n          data = _context9.sent;\n\n          if (!(data.error_code === 0)) {\n            _context9.next = 12;\n            break;\n          }\n\n          // console.log(data)\n          result = data.result;\n          blockReward = result.block_reward;\n          validatorsReward = result.validators_reward;\n          validatorItems = [];\n          keys = Object.keys(validatorsReward);\n\n          if (keys.length > 0) {\n            keys.forEach(function (item) {\n              validatorItems.push({\n                validator: item,\n                reward: validatorsReward[item]\n              });\n            });\n          }\n\n          return _context9.abrupt(\"return\", this._responseData({\n            blockReward: blockReward,\n            validatorsReward: validatorItems\n          }));\n\n        case 12:\n          if (!(data.error_code === 4)) {\n            _context9.next = 14;\n            break;\n          }\n\n          return _context9.abrupt(\"return\", this._responseError(errors.QUERY_RESULT_NOT_EXIST, data.result));\n\n        case 14:\n          return _context9.abrupt(\"return\", this._responseError(errors.FAIL));\n\n        case 17:\n          _context9.prev = 17;\n          _context9.t0 = _context9[\"catch\"](0);\n          throw _context9.t0;\n\n        case 20:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _callee9, this, [[0, 17]]);\n});\nproto.getFees =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee10(blockNumber) {\n  var data, result, fees;\n  return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.prev = 0;\n\n          if (this._verifyValue(blockNumber)) {\n            _context10.next = 3;\n            break;\n          }\n\n          return _context10.abrupt(\"return\", this._responseError(errors.INVALID_BLOCKNUMBER_ERROR));\n\n        case 3:\n          _context10.next = 5;\n          return this._request('get', 'getLedger', {\n            seq: blockNumber,\n            with_fee: true\n          });\n\n        case 5:\n          data = _context10.sent;\n\n          if (!(data.error_code === 0)) {\n            _context10.next = 10;\n            break;\n          }\n\n          // console.log(data)\n          result = data.result;\n          fees = result.fees;\n          return _context10.abrupt(\"return\", this._responseData({\n            // fees: humps.camelizeKeys(fees),\n            fees: fees\n          }));\n\n        case 10:\n          if (!(data.error_code === 4)) {\n            _context10.next = 12;\n            break;\n          }\n\n          return _context10.abrupt(\"return\", this._responseError(errors.QUERY_RESULT_NOT_EXIST, data.result));\n\n        case 12:\n          return _context10.abrupt(\"return\", this._responseError(errors.FAIL));\n\n        case 15:\n          _context10.prev = 15;\n          _context10.t0 = _context10[\"catch\"](0);\n          throw _context10.t0;\n\n        case 18:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _callee10, this, [[0, 15]]);\n});\nproto.getLatestFees =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee11() {\n  var data, result, fees;\n  return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.prev = 0;\n          _context11.next = 3;\n          return this._request('get', 'getLedger', {\n            with_fee: true\n          });\n\n        case 3:\n          data = _context11.sent;\n\n          if (!(data.error_code === 0)) {\n            _context11.next = 8;\n            break;\n          }\n\n          // console.log(data)\n          result = data.result;\n          fees = result.fees;\n          return _context11.abrupt(\"return\", this._responseData({\n            // fees: humps.camelizeKeys(fees),\n            fees: fees\n          }));\n\n        case 8:\n          if (!(data.error_code === 4)) {\n            _context11.next = 10;\n            break;\n          }\n\n          return _context11.abrupt(\"return\", this._responseError(errors.QUERY_RESULT_NOT_EXIST, data.result));\n\n        case 10:\n          return _context11.abrupt(\"return\", this._responseError(errors.FAIL));\n\n        case 13:\n          _context11.prev = 13;\n          _context11.t0 = _context11[\"catch\"](0);\n          throw _context11.t0;\n\n        case 16:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _callee11, this, [[0, 13]]);\n});\nwrap(proto);","map":null,"metadata":{},"sourceType":"script"}