{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/jesse/Desktop/blockx/BUMODapp/node_modules/@babel/runtime/regenerator\");\n\nvar wrap = require('co-wrap-all');\n\nvar is = require('is-type-of');\n\nvar merge = require('merge-descriptors');\n\nvar errors = require('../exception');\n\nmodule.exports = Asset;\n\nfunction Asset(options) {\n  if (!(this instanceof Asset)) {\n    return new Asset(options);\n  }\n\n  this.options = options;\n}\n\nvar proto = Asset.prototype;\nmerge(proto, require('../common/util'));\nproto.getInfo =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee(args) {\n  var address, code, issuer, schema, msg, data, obj;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n\n          if (!(is.array(args) || !is.object(args))) {\n            _context.next = 3;\n            break;\n          }\n\n          return _context.abrupt(\"return\", this._responseError(errors.INVALID_ARGUMENTS));\n\n        case 3:\n          address = args.address, code = args.code, issuer = args.issuer;\n          schema = {\n            address: {\n              required: true,\n              address: true\n            },\n            code: {\n              required: true,\n              string: true\n            },\n            issuer: {\n              required: true,\n              address: true\n            }\n          };\n\n          if (this._validate(args, schema).tag) {\n            _context.next = 8;\n            break;\n          }\n\n          msg = this._validate(args, schema).msg;\n          return _context.abrupt(\"return\", this._responseError(errors[msg]));\n\n        case 8:\n          _context.next = 10;\n          return this._request('get', 'getAccountAssets', {\n            address: address\n          });\n\n        case 10:\n          data = _context.sent;\n\n          if (!(data.error_code === 0 && data.result && data.result.length > 0)) {\n            _context.next = 17;\n            break;\n          }\n\n          obj = [];\n          data.result.some(function (item) {\n            if (item.key.code === code && item.key.issuer === issuer) {\n              obj.push(item);\n              return true;\n            }\n          });\n          return _context.abrupt(\"return\", this._responseData({\n            assets: obj\n          }));\n\n        case 17:\n          return _context.abrupt(\"return\", this._responseData({\n            assets: []\n          }));\n\n        case 18:\n          _context.next = 23;\n          break;\n\n        case 20:\n          _context.prev = 20;\n          _context.t0 = _context[\"catch\"](0);\n          throw _context.t0;\n\n        case 23:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee, this, [[0, 20]]);\n});\nwrap(proto);","map":null,"metadata":{},"sourceType":"script"}