{"ast":null,"code":"import _regeneratorRuntime from \"/Users/jesse/Desktop/blockx/BUMODapp/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jesse/Desktop/blockx/BUMODapp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/jesse/Desktop/blockx/BUMODapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jesse/Desktop/blockx/BUMODapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jesse/Desktop/blockx/BUMODapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jesse/Desktop/blockx/BUMODapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jesse/Desktop/blockx/BUMODapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/jesse/Desktop/blockx/BUMODapp/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/jesse/Desktop/blockx/BUMODapp/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport BumoSDK from 'bumo-sdk';\nimport 'bulma/css/bulma.css';\nimport { handleFundAccount } from './utils.js';\nvar sdk = new BumoSDK({\n  host: '192.168.33.10:36002'\n});\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.convertToHex = function (blob) {\n      var buffer = blob.split(',').map(function (e) {\n        return Number(e);\n      });\n      return Array.prototype.map.call(new Uint8Array(buffer), function (x) {\n        return ('00' + x.toString(16)).slice(-2);\n      }).join('');\n    };\n\n    _this.AssestToHex = function (blob) {\n      var buffer = blob.split(',').map(function (e) {\n        return Number(e);\n      });\n      return Array.prototype.map.call(new Uint8Array(buffer), function (x) {\n        return ('00' + x.toString(16)).slice(-2);\n      }).join('');\n    };\n\n    _this.handleAccountCreation =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this.refs.btn.setAttribute(\"disabled\", \"disabled\");\n\n                sdk.account.create().then(function (data) {\n                  console.log(data);\n                  var address = data.result.address;\n\n                  _this.setState({\n                    address: address\n                  });\n\n                  var privateKey = data.result.privateKey;\n\n                  _this.setState({\n                    privateKey: privateKey\n                  });\n                }).catch(function (err) {\n                  console.log(err.message);\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.handleFundAccount =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(e) {\n        var operationInfo, operationItem, accountInfo, non, nonc, nonce, blobInfo, blob, blobHexFormat, signatureInfo, signature, transactionInfo;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                operationInfo = sdk.operation.buSendOperation({\n                  destAddress: _this.state.address,\n                  buAmount: '10000000',\n                  //write about\n                  metadata: '746573742073656e64206275'\n                });\n\n                if (!(operationInfo.errorCode !== 0)) {\n                  _context2.next = 4;\n                  break;\n                }\n\n                console.log(operationInfo);\n                return _context2.abrupt(\"return\");\n\n              case 4:\n                operationItem = operationInfo.result.operation;\n                console.log(operationItem);\n                _context2.next = 8;\n                return sdk.account.getNonce('buQgvdDfUjmK56K73ba8kqnE1d8azzCRYM9G');\n\n              case 8:\n                accountInfo = _context2.sent;\n\n                if (!(accountInfo.errorCode !== 0)) {\n                  _context2.next = 12;\n                  break;\n                }\n\n                console.log(accountInfo);\n                return _context2.abrupt(\"return\");\n\n              case 12:\n                non = accountInfo.result.nonce;\n                nonc = parseInt(non.substring(0)) + 1;\n                nonce = String(nonc);\n                console.log(nonce);\n                blobInfo = sdk.transaction.buildBlob({\n                  sourceAddress: 'buQgvdDfUjmK56K73ba8kqnE1d8azzCRYM9G',\n                  gasPrice: '1000',\n                  feeLimit: '306000',\n                  nonce: nonce,\n                  operations: [operationItem]\n                });\n                console.log(blobInfo.errorCode);\n\n                if (!(blobInfo.errorCode !== 0)) {\n                  _context2.next = 21;\n                  break;\n                }\n\n                console.log(blobInfo.toString());\n                return _context2.abrupt(\"return\");\n\n              case 21:\n                blob = blobInfo.result.transactionBlob;\n                console.log(blob);\n                _context2.next = 25;\n                return _this.convertToHex(blob);\n\n              case 25:\n                blobHexFormat = _context2.sent;\n\n                _this.setState({\n                  blob: blobHexFormat\n                });\n\n                signatureInfo = sdk.transaction.sign({\n                  privateKeys: ['privbtEELf99kKzMAPJU17ceYzz5d6y8Y5gbEKc7WySG9NRAEmGibkiG'],\n                  blob: blobHexFormat\n                });\n\n                if (!(signatureInfo.errorCode !== 0)) {\n                  _context2.next = 31;\n                  break;\n                }\n\n                console.log(signatureInfo);\n                return _context2.abrupt(\"return\");\n\n              case 31:\n                signature = signatureInfo.result.signatures;\n                console.log(signature);\n                transactionInfo = sdk.transaction.submit({\n                  blob: blobHexFormat,\n                  signature: signature\n                }).then(function (transactionInfo) {\n                  console.log(transactionInfo);\n                  var txHash = transactionInfo.result.hash;\n\n                  _this.setState({\n                    txHash: txHash\n                  });\n                }).catch(function (err) {\n                  console.log(err.message);\n                });\n\n                _this.refs.btn2.setAttribute(\"disabled\", \"disabled\");\n\n              case 35:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.handleCreateAssest =\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(e) {\n        var atp10TokenMetadata, operationInfo, operationItem, accountInfo, non, nonc, nonce, blobInfo, blob, AssetHexFormat, signatureInfo, signature, transactionInfo;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                atp10TokenMetadata = {\n                  version: '1.0',\n                  name: 'Test',\n                  nowSupply: '0',\n                  decimals: '1',\n                  description: 'testing'\n                };\n                operationInfo = sdk.operation.assetIssueOperation({\n                  sourceAddress: 'buQgvdDfUjmK56K73ba8kqnE1d8azzCRYM9G',\n                  code: atp10TokenMetadata.name,\n                  assetAmount: '10000',\n                  metadata: \"atp10TokenMetadata\"\n                });\n\n                if (!(operationInfo.errorCode !== 0)) {\n                  _context3.next = 5;\n                  break;\n                }\n\n                console.log(operationInfo);\n                return _context3.abrupt(\"return\");\n\n              case 5:\n                operationItem = operationInfo.result.operation;\n                console.log(operationItem);\n                _context3.next = 9;\n                return sdk.account.getNonce('buQgvdDfUjmK56K73ba8kqnE1d8azzCRYM9G');\n\n              case 9:\n                accountInfo = _context3.sent;\n\n                if (!(accountInfo.errorCode !== 0)) {\n                  _context3.next = 13;\n                  break;\n                }\n\n                console.log(accountInfo);\n                return _context3.abrupt(\"return\");\n\n              case 13:\n                non = accountInfo.result.nonce;\n                nonc = parseInt(non.substring(0)) + 1;\n                nonce = String(nonc);\n                console.log(nonce);\n                blobInfo = sdk.transaction.buildBlob({\n                  sourceAddress: _this.state.address,\n                  gasPrice: '10000',\n                  feeLimit: '500021200000',\n                  nonce: nonce,\n                  operations: [operationItem]\n                });\n                console.log(blobInfo.errorCode);\n\n                if (!(blobInfo.errorCode !== 0)) {\n                  _context3.next = 22;\n                  break;\n                }\n\n                console.log(blobInfo);\n                return _context3.abrupt(\"return\");\n\n              case 22:\n                blob = blobInfo.result.transactionBlob;\n                _context3.next = 25;\n                return _this.convertToHex(blob);\n\n              case 25:\n                AssetHexFormat = _context3.sent;\n                console.log(blob);\n                signatureInfo = sdk.transaction.sign({\n                  privateKeys: ['privbtEELf99kKzMAPJU17ceYzz5d6y8Y5gbEKc7WySG9NRAEmGibkiG'],\n                  blob: AssetHexFormat\n                });\n\n                if (!(signatureInfo.errorCode !== 0)) {\n                  _context3.next = 31;\n                  break;\n                }\n\n                console.log(signatureInfo);\n                return _context3.abrupt(\"return\");\n\n              case 31:\n                signature = signatureInfo.result.signatures;\n                console.log(signature);\n                transactionInfo = sdk.transaction.submit({\n                  blob: AssetHexFormat,\n                  signature: signature\n                }).then(function (info) {\n                  console.log(info);\n                }).catch(function (err) {\n                  console.log(err.message);\n                });\n\n                if (transactionInfo.errorCode !== 0) {\n                  console.log(transactionInfo);\n                }\n\n              case 35:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    _this.handleCheckBalance =\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(e) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      return function (_x4) {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n\n    _this.state = {\n      address: null,\n      privateKey: null,\n      blob: null,\n      nonce: null,\n      txHash: null\n    };\n    _this.handleFundAccount = _this.handleFundAccount.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.convertToHex = _this.convertToHex.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleCreateAssest = _this.handleCreateAssest.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.AssestToHex = _this.AssestToHex.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, \"Click Button To create private public keys.\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, \"Your Address = \", this.state.address, \" \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, \"Your Private Key = \", this.state.privateKey), React.createElement(\"button\", {\n        className: \"button is-primary\",\n        onClick: function onClick() {\n          return _this2.handleAccountCreation();\n        },\n        ref: \"btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, \"Create Account\"), React.createElement(\"button\", {\n        className: \"button is-primary\",\n        onClick: function onClick() {\n          return _this2.handleFundAccount();\n        },\n        ref: \"btn2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, \"Fund Account\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, this.state.transactionInfo), React.createElement(\"button\", {\n        className: \"button is-primary\",\n        onClick: function onClick() {\n          return _this2.handleCreateAssest();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, \"Create Assest\"), React.createElement(\"button\", {\n        className: \"button is-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, \"Check Balance\")));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App; //privbxcr3H9WbfZwpmB7nVFdPinJFS22i7ifM7z5ikGxQKJWkxnze2Q1","map":{"version":3,"sources":["/Users/jesse/Desktop/blockx/BUMODapp/src/App.js"],"names":["React","Component","BumoSDK","handleFundAccount","sdk","host","App","props","convertToHex","blob","buffer","split","map","e","Number","Array","prototype","call","Uint8Array","x","toString","slice","join","AssestToHex","handleAccountCreation","refs","btn","setAttribute","account","create","then","data","console","log","address","result","setState","privateKey","catch","err","message","operationInfo","operation","buSendOperation","destAddress","state","buAmount","metadata","errorCode","operationItem","getNonce","accountInfo","non","nonce","nonc","parseInt","substring","String","blobInfo","transaction","buildBlob","sourceAddress","gasPrice","feeLimit","operations","transactionBlob","blobHexFormat","signatureInfo","sign","privateKeys","signature","signatures","transactionInfo","submit","txHash","hash","btn2","handleCreateAssest","atp10TokenMetadata","version","name","nowSupply","decimals","description","assetIssueOperation","code","assetAmount","AssetHexFormat","info","handleCheckBalance","bind","logo"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport BumoSDK from 'bumo-sdk';\nimport 'bulma/css/bulma.css';\nimport { handleFundAccount } from './utils.js'\n\n\n\nconst sdk = new BumoSDK({\n  host: '192.168.33.10:36002',\n})\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      address: null,\n      privateKey: null,\n      blob: null,\n      nonce: null,\n      txHash: null\n    }\n\n    this.handleFundAccount = this.handleFundAccount.bind(this);\n    this.convertToHex = this.convertToHex.bind(this);\n    this.handleCreateAssest = this.handleCreateAssest.bind(this);\n    this.AssestToHex = this.AssestToHex.bind(this);\n\n  }\n\n  convertToHex = (blob) => {\n    const buffer = blob.split(',').map(e => Number(e))\n    return Array.prototype.map.call(new Uint8Array(buffer), x => ('00' + x.toString(16)).slice(-2)).join('');\n  }\n\n  AssestToHex = (blob) => {\n    const buffer = blob.split(',').map(e => Number(e))\n    return Array.prototype.map.call(new Uint8Array(buffer), x => ('00' + x.toString(16)).slice(-2)).join('');\n  }\n\n  handleAccountCreation = async (e) => {\n    this.refs.btn.setAttribute(\"disabled\", \"disabled\");\n\n    sdk.account.create().then(data => {\n      console.log(data)\n      var address = data.result.address;\n      this.setState({ address: address })\n      var privateKey = data.result.privateKey;\n      this.setState({ privateKey: privateKey })\n    }).catch(err => {\n      console.log(err.message)\n    });\n  }\n\n\n\n  handleFundAccount = async (e) => {\n\n\n\n\n    const operationInfo = sdk.operation.buSendOperation({\n      destAddress: this.state.address,\n      buAmount: '10000000', //write about\n      metadata: '746573742073656e64206275',\n    });\n\n\n    if (operationInfo.errorCode !== 0) {\n      console.log(operationInfo);\n      return;\n    }\n\n\n    const operationItem = operationInfo.result.operation;\n\n    console.log(operationItem);\n\n    const accountInfo = await sdk.account.getNonce('buQgvdDfUjmK56K73ba8kqnE1d8azzCRYM9G');\n    if (accountInfo.errorCode !== 0) {\n      console.log(accountInfo);\n      return;\n    }\n    let non = accountInfo.result.nonce;\n    let nonc = parseInt(non.substring(0)) + 1;\n    let nonce = String(nonc);\n\n    console.log(nonce);\n\n\n    const blobInfo = sdk.transaction.buildBlob({\n      sourceAddress: 'buQgvdDfUjmK56K73ba8kqnE1d8azzCRYM9G',\n      gasPrice: '1000',\n      feeLimit: '306000',\n      nonce,\n      operations: [operationItem],\n\n    });\n\n    console.log(blobInfo.errorCode);\n\n    if (blobInfo.errorCode !== 0) {\n      console.log(blobInfo.toString());\n      return;\n    }\n\n\n\n    const blob = blobInfo.result.transactionBlob;\n    console.log(blob);\n    const blobHexFormat = await this.convertToHex(blob)\n    this.setState({ blob: blobHexFormat })\n\n    const signatureInfo = sdk.transaction.sign({\n      privateKeys: ['privbtEELf99kKzMAPJU17ceYzz5d6y8Y5gbEKc7WySG9NRAEmGibkiG'],\n      blob: blobHexFormat,\n    });\n\n\n    if (signatureInfo.errorCode !== 0) {\n      console.log(signatureInfo);\n      return;\n    }\n\n    const signature = signatureInfo.result.signatures;\n\n    console.log(signature);\n\n\n\n    const transactionInfo = sdk.transaction.submit({\n      blob: blobHexFormat,\n      signature: signature,\n    }).then(transactionInfo => {\n      console.log(transactionInfo)\n      var txHash = transactionInfo.result.hash;\n      this.setState({ txHash: txHash })\n    }).catch(err => {\n      console.log(err.message)\n    });\n\n\n\n    this.refs.btn2.setAttribute(\"disabled\", \"disabled\");\n\n\n  }\n\n  handleCreateAssest = async (e) => {\n\n\n    const atp10TokenMetadata = {\n      version: '1.0',\n      name: 'Test',\n      nowSupply: '0',\n      decimals: '1',\n      description: 'testing',\n    };\n\n\n    const operationInfo = sdk.operation.assetIssueOperation({\n      sourceAddress: 'buQgvdDfUjmK56K73ba8kqnE1d8azzCRYM9G',\n      code: atp10TokenMetadata.name,\n      assetAmount: '10000',\n      metadata: \"atp10TokenMetadata\",\n    });\n\n\n    if (operationInfo.errorCode !== 0) {\n      console.log(operationInfo);\n      return;\n    }\n\n\n    const operationItem = operationInfo.result.operation;\n\n    console.log(operationItem);\n    \n    const accountInfo = await sdk.account.getNonce('buQgvdDfUjmK56K73ba8kqnE1d8azzCRYM9G');\n    if (accountInfo.errorCode !== 0) {\n      console.log(accountInfo);\n      return;\n    }\n    let non = accountInfo.result.nonce;\n    let nonc = parseInt(non.substring(0)) + 1;\n    let nonce = String(nonc);\n\n    console.log(nonce);\n\n    const blobInfo = sdk.transaction.buildBlob({\n      sourceAddress: this.state.address,\n      gasPrice: '10000',\n      feeLimit: '500021200000',\n      nonce,\n      operations: [operationItem],\n\n\n    });\n\n    console.log(blobInfo.errorCode);\n\n    if (blobInfo.errorCode !== 0) {\n      console.log(blobInfo);\n      return;\n    }\n\n\n    const blob = blobInfo.result.transactionBlob;\n    const AssetHexFormat = await this.convertToHex(blob)\n\n\n    console.log(blob);\n\n    let signatureInfo = sdk.transaction.sign({\n      privateKeys: ['privbtEELf99kKzMAPJU17ceYzz5d6y8Y5gbEKc7WySG9NRAEmGibkiG'],\n      blob: AssetHexFormat,\n    });\n\n\n    if (signatureInfo.errorCode !== 0) {\n      console.log(signatureInfo);\n      return;\n    }\n\n    const signature = signatureInfo.result.signatures;\n\n    console.log(signature);\n\n\n\n    const transactionInfo = sdk.transaction.submit({\n      blob: AssetHexFormat,\n      signature: signature,\n    }).then(info => {\n      console.log(info);\n    }).catch(err => {\n      console.log(err.message);\n    });\n\n\n    if (transactionInfo.errorCode !== 0) {\n      console.log(transactionInfo);\n    }\n\n  }\n\n  handleCheckBalance = async (e) => {\n    \n  }\n\n\n\n\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\"\n        >\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Click Button To create private public keys.\n          </p>\n          <p>Your Address = {this.state.address} </p>\n          <p>Your Private Key = {this.state.privateKey}</p>\n\n          <button\n            className=\"button is-primary\"\n            onClick={() => this.handleAccountCreation()}\n            ref=\"btn\">\n            Create Account\n        </button>\n\n\n          <button\n            className=\"button is-primary\"\n            onClick={() => this.handleFundAccount()}\n            ref=\"btn2\"\n          >\n            Fund Account\n        </button>\n          <p>{this.state.transactionInfo}</p>\n\n          <button\n            className=\"button is-primary\"\n            onClick={() => this.handleCreateAssest()}\n          >\n            Create Assest\n        </button>\n          <button\n            className=\"button is-primary\"\n          >\n            Check Balance\n        </button>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n\n\n//privbxcr3H9WbfZwpmB7nVFdPinJFS22i7ifM7z5ikGxQKJWkxnze2Q1\n"]},"metadata":{},"sourceType":"module"}