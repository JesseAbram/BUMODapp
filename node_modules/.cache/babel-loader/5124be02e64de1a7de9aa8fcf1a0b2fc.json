{"ast":null,"code":"'use strict';\n\nvar is = require('is-type-of');\n\nvar protobuf = require('protobufjs');\n\nvar long = require('long');\n\nvar ctp = require('../ctp');\n/**\n * ctp10TokenApproveOperation\n * @param args\n * @return {payload}\n */\n\n\nmodule.exports = function (args) {\n  try {\n    var sourceAddress = args.sourceAddress,\n        contractAddress = args.contractAddress,\n        spender = args.spender,\n        tokenAmount = args.tokenAmount,\n        metadata = args.metadata;\n    var root = protobuf.Root.fromJSON(require('../../crypto/protobuf/bundle.json'));\n    var payCoin = root.lookupType('protocol.OperationPayCoin');\n    var opt = {\n      destAddress: contractAddress // amount: 0,\n\n    };\n    var inputObj = {\n      method: 'approve',\n      params: {\n        spender: spender,\n        value: tokenAmount\n      }\n    };\n    opt.input = JSON.stringify(inputObj);\n    var payCoinMsg = payCoin.create(opt);\n    var operation = root.lookupType('protocol.Operation');\n    var payload = {\n      payCoin: payCoinMsg,\n      type: operation.Type.PAY_COIN\n    };\n\n    if (sourceAddress) {\n      payload.sourceAddress = sourceAddress;\n    }\n\n    if (metadata) {\n      payload.metadata = metadata;\n    }\n\n    var err = operation.verify(payload);\n\n    if (err) {\n      throw Error(err);\n    }\n\n    return operation.create(payload);\n  } catch (err) {\n    throw err;\n  }\n};","map":null,"metadata":{},"sourceType":"script"}