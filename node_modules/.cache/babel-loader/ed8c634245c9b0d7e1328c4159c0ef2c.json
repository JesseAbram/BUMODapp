{"ast":null,"code":"import _regeneratorRuntime from \"/Users/jesse/Desktop/blockx/BUMODapp/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jesse/Desktop/blockx/BUMODapp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/jesse/Desktop/blockx/BUMODapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jesse/Desktop/blockx/BUMODapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jesse/Desktop/blockx/BUMODapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jesse/Desktop/blockx/BUMODapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jesse/Desktop/blockx/BUMODapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/jesse/Desktop/blockx/BUMODapp/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/jesse/Desktop/blockx/BUMODapp/src/App.js\";\nimport React, { Component } from 'react';\nimport bumo from './Bumo.jpg';\nimport './App.css';\nimport BumoSDK from 'bumo-sdk';\nimport 'bulma/css/bulma.css';\nvar sdk = new BumoSDK({\n  //host: '192.168.33.10:36002',\n  host: 'seed1.bumotest.io:26002'\n});\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.convertToHex = function (blob) {\n      var buffer = blob.split(',').map(function (e) {\n        return Number(e);\n      });\n      return Array.prototype.map.call(new Uint8Array(buffer), function (x) {\n        return ('00' + x.toString(16)).slice(-2);\n      }).join('');\n    };\n\n    _this.AssestToHex = function (blob) {\n      var buffer = blob.split(',').map(function (e) {\n        return Number(e);\n      });\n      return Array.prototype.map.call(new Uint8Array(buffer), function (x) {\n        return ('00' + x.toString(16)).slice(-2);\n      }).join('');\n    };\n\n    _this.handleAccountCreation =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this.refs.btn.setAttribute(\"disabled\", \"disabled\");\n\n                sdk.account.create().then(function (data) {\n                  console.log(data);\n                  var address = data.result.address;\n\n                  _this.setState({\n                    address: address\n                  });\n\n                  var privateKey = data.result.privateKey;\n\n                  _this.setState({\n                    privateKey: privateKey\n                  });\n                }).catch(function (err) {\n                  console.log(err.message);\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.handleFundAccount =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(e) {\n        var operationInfo, operationItem, accountInfo, non, nonc, nonce, blobInfo, blob, blobHexFormat, signatureInfo, signature, transactionInfo;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                operationInfo = sdk.operation.buSendOperation({\n                  destAddress: _this.state.address,\n                  buAmount: '1000000',\n                  //write about\n                  metadata: '746573742073656e64206275'\n                });\n\n                if (!(operationInfo.errorCode !== 0)) {\n                  _context2.next = 4;\n                  break;\n                }\n\n                console.log(operationInfo);\n                return _context2.abrupt(\"return\");\n\n              case 4:\n                operationItem = operationInfo.result.operation;\n                console.log(operationItem);\n                _context2.next = 8;\n                return sdk.account.getNonce('buQgvdDfUjmK56K73ba8kqnE1d8azzCRYM9G');\n\n              case 8:\n                accountInfo = _context2.sent;\n\n                if (!(accountInfo.errorCode !== 0)) {\n                  _context2.next = 12;\n                  break;\n                }\n\n                console.log(accountInfo);\n                return _context2.abrupt(\"return\");\n\n              case 12:\n                non = accountInfo.result.nonce;\n                nonc = parseInt(non.substring(0)) + 1;\n                nonce = String(nonc);\n                console.log(nonce);\n                blobInfo = sdk.transaction.buildBlob({\n                  sourceAddress: 'buQgvdDfUjmK56K73ba8kqnE1d8azzCRYM9G',\n                  gasPrice: '1000',\n                  feeLimit: '306000',\n                  nonce: nonce,\n                  operations: [operationItem]\n                });\n                console.log(blobInfo.errorCode);\n\n                if (!(blobInfo.errorCode !== 0)) {\n                  _context2.next = 21;\n                  break;\n                }\n\n                console.log(blobInfo.toString());\n                return _context2.abrupt(\"return\");\n\n              case 21:\n                blob = blobInfo.result.transactionBlob;\n                console.log(blob);\n                _context2.next = 25;\n                return _this.convertToHex(blob);\n\n              case 25:\n                blobHexFormat = _context2.sent;\n\n                _this.setState({\n                  blob: blobHexFormat\n                });\n\n                signatureInfo = sdk.transaction.sign({\n                  privateKeys: ['privbtEELf99kKzMAPJU17ceYzz5d6y8Y5gbEKc7WySG9NRAEmGibkiG'],\n                  blob: blobHexFormat\n                });\n\n                if (!(signatureInfo.errorCode !== 0)) {\n                  _context2.next = 31;\n                  break;\n                }\n\n                console.log(signatureInfo);\n                return _context2.abrupt(\"return\");\n\n              case 31:\n                signature = signatureInfo.result.signatures;\n                console.log(signature);\n                transactionInfo = sdk.transaction.submit({\n                  blob: blobHexFormat,\n                  signature: signature\n                }).then(function (transactionInfo) {\n                  console.log(transactionInfo);\n                  var txHash = transactionInfo.result.hash;\n\n                  _this.setState({\n                    txHash: txHash\n                  });\n                }).catch(function (err) {\n                  console.log(err.message);\n                });\n\n                _this.refs.btn2.setAttribute(\"disabled\", \"disabled\");\n\n              case 35:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.handleCreateAssest =\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(e) {\n        var atp10TokenMetadata, operationInfo, operationItem, accountInfo, non, nonc, nonce, blobInfo, blob, AssetHexFormat, signatureInfo, signature, transactionInfo;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                atp10TokenMetadata = {\n                  version: '1.0',\n                  name: 'Test',\n                  nowSupply: '0',\n                  decimals: '1',\n                  description: 'testing'\n                };\n                operationInfo = sdk.operation.assetIssueOperation({\n                  sourceAddress: 'buQgvdDfUjmK56K73ba8kqnE1d8azzCRYM9G',\n                  code: atp10TokenMetadata.name,\n                  assetAmount: '10000',\n                  metadata: \"atp10TokenMetadata\"\n                });\n\n                if (!(operationInfo.errorCode !== 0)) {\n                  _context3.next = 5;\n                  break;\n                }\n\n                console.log(operationInfo);\n                return _context3.abrupt(\"return\");\n\n              case 5:\n                operationItem = operationInfo.result.operation;\n                console.log(operationItem);\n                _context3.next = 9;\n                return sdk.account.getNonce('buQgvdDfUjmK56K73ba8kqnE1d8azzCRYM9G');\n\n              case 9:\n                accountInfo = _context3.sent;\n\n                if (!(accountInfo.errorCode !== 0)) {\n                  _context3.next = 13;\n                  break;\n                }\n\n                console.log(accountInfo);\n                return _context3.abrupt(\"return\");\n\n              case 13:\n                non = accountInfo.result.nonce;\n                nonc = parseInt(non.substring(0)) + 1;\n                nonce = String(nonc);\n                console.log(nonce);\n                blobInfo = sdk.transaction.buildBlob({\n                  sourceAddress: _this.state.address,\n                  gasPrice: '10000',\n                  feeLimit: '500021200000',\n                  nonce: nonce,\n                  operations: [operationItem]\n                });\n                console.log(blobInfo.errorCode);\n\n                if (!(blobInfo.errorCode !== 0)) {\n                  _context3.next = 22;\n                  break;\n                }\n\n                console.log(blobInfo);\n                return _context3.abrupt(\"return\");\n\n              case 22:\n                blob = blobInfo.result.transactionBlob;\n                _context3.next = 25;\n                return _this.convertToHex(blob);\n\n              case 25:\n                AssetHexFormat = _context3.sent;\n                console.log(blob);\n                signatureInfo = sdk.transaction.sign({\n                  privateKeys: ['privbtEELf99kKzMAPJU17ceYzz5d6y8Y5gbEKc7WySG9NRAEmGibkiG'],\n                  blob: AssetHexFormat\n                });\n\n                if (!(signatureInfo.errorCode !== 0)) {\n                  _context3.next = 31;\n                  break;\n                }\n\n                console.log(signatureInfo);\n                return _context3.abrupt(\"return\");\n\n              case 31:\n                signature = signatureInfo.result.signatures;\n                console.log(signature);\n                transactionInfo = sdk.transaction.submit({\n                  blob: AssetHexFormat,\n                  signature: signature\n                }).then(function (info) {\n                  console.log(info);\n                }).catch(function (err) {\n                  console.log(err.message);\n                });\n\n                if (transactionInfo.errorCode !== 0) {\n                  console.log(transactionInfo);\n                }\n\n              case 35:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    _this.handleCheckBalance =\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(e) {\n        var address;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                address = _this.state.address; //const address = 'buQgvdDfUjmK56K73ba8kqnE1d8azzCRYM9G'\n\n                _context4.next = 3;\n                return sdk.account.getInfo(address).then(function (data) {\n                  console.log(data);\n                  var balance = data.result.balance;\n\n                  _this.setState({\n                    balance: balance\n                  });\n\n                  var assests = data.result.assests;\n\n                  _this.setState({\n                    assests: assests\n                  });\n                }).catch(function (err) {\n                  console.log(err.message);\n                });\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      return function (_x4) {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n\n    _this.handleBuildWebsite =\n    /*#__PURE__*/\n    function () {\n      var _ref5 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(e) {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                window.location = 'https://explorer.bumotest.io/account/' + _this.state.address;\n\n              case 1:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      return function (_x5) {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n\n    _this.state = {\n      address: null,\n      privateKey: null,\n      blob: null,\n      nonce: null,\n      txHash: null,\n      balance: null,\n      assests: []\n    };\n    _this.handleFundAccount = _this.handleFundAccount.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.convertToHex = _this.convertToHex.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleCreateAssest = _this.handleCreateAssest.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.AssestToHex = _this.AssestToHex.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: bumo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, \"Click Button To create private public keys.\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, \"Your Address = \", this.state.address, \" \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, \"Your Private Key = \", this.state.privateKey), React.createElement(\"button\", {\n        className: \"button is-primary\",\n        onClick: function onClick() {\n          return _this2.handleAccountCreation();\n        },\n        ref: \"btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, \"Create Account\"), React.createElement(\"button\", {\n        className: \"button is-primary\",\n        onClick: function onClick() {\n          return _this2.handleFundAccount();\n        },\n        ref: \"btn2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, \"Fund Account\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, this.state.transactionInfo), React.createElement(\"button\", {\n        className: \"button is-primary\",\n        onClick: function onClick() {\n          return _this2.handleCreateAssest();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, \"Create Assest\"), React.createElement(\"button\", {\n        className: \"button is-primary\",\n        onClick: function onClick() {\n          return _this2.handleCheckBalance();\n        },\n        href: \"https://explorer.bumotest.io/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, \"Check Balance\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, \"balance = \", this.state.balance), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, \"assests = \", this.state.assests), React.createElement(\"a\", {\n        onClick: function onClick() {\n          return _this2.handleBuildWebsite();\n        },\n        className: \"button is-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, \"View on BlockExplorer\")));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App; //privbxcr3H9WbfZwpmB7nVFdPinJFS22i7ifM7z5ikGxQKJWkxnze2Q1","map":{"version":3,"sources":["/Users/jesse/Desktop/blockx/BUMODapp/src/App.js"],"names":["React","Component","bumo","BumoSDK","sdk","host","App","props","convertToHex","blob","buffer","split","map","e","Number","Array","prototype","call","Uint8Array","x","toString","slice","join","AssestToHex","handleAccountCreation","refs","btn","setAttribute","account","create","then","data","console","log","address","result","setState","privateKey","catch","err","message","handleFundAccount","operationInfo","operation","buSendOperation","destAddress","state","buAmount","metadata","errorCode","operationItem","getNonce","accountInfo","non","nonce","nonc","parseInt","substring","String","blobInfo","transaction","buildBlob","sourceAddress","gasPrice","feeLimit","operations","transactionBlob","blobHexFormat","signatureInfo","sign","privateKeys","signature","signatures","transactionInfo","submit","txHash","hash","btn2","handleCreateAssest","atp10TokenMetadata","version","name","nowSupply","decimals","description","assetIssueOperation","code","assetAmount","AssetHexFormat","info","handleCheckBalance","getInfo","balance","assests","handleBuildWebsite","window","location","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport bumo from './Bumo.jpg';\nimport './App.css';\nimport BumoSDK from 'bumo-sdk';\nimport 'bulma/css/bulma.css';\n\n\n\nconst sdk = new BumoSDK({\n  //host: '192.168.33.10:36002',\n  host: 'seed1.bumotest.io:26002',\n})\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      address: null,\n      privateKey: null,\n      blob: null,\n      nonce: null,\n      txHash: null,\n      balance: null,\n      assests: [],\n    }\n\n    this.handleFundAccount = this.handleFundAccount.bind(this);\n    this.convertToHex = this.convertToHex.bind(this);\n    this.handleCreateAssest = this.handleCreateAssest.bind(this);\n    this.AssestToHex = this.AssestToHex.bind(this);\n\n  }\n\n  convertToHex = (blob) => {\n    const buffer = blob.split(',').map(e => Number(e))\n    return Array.prototype.map.call(new Uint8Array(buffer), x => ('00' + x.toString(16)).slice(-2)).join('');\n  }\n\n  AssestToHex = (blob) => {\n    const buffer = blob.split(',').map(e => Number(e))\n    return Array.prototype.map.call(new Uint8Array(buffer), x => ('00' + x.toString(16)).slice(-2)).join('');\n  }\n\n  handleAccountCreation = async (e) => {\n    this.refs.btn.setAttribute(\"disabled\", \"disabled\");\n\n    sdk.account.create().then(data => {\n      console.log(data)\n      var address = data.result.address;\n      this.setState({ address: address })\n      var privateKey = data.result.privateKey;\n      this.setState({ privateKey: privateKey })\n    }).catch(err => {\n      console.log(err.message)\n    });\n  }\n\n  handleFundAccount = async (e) => {\n\n    const operationInfo = sdk.operation.buSendOperation({\n      destAddress: this.state.address,\n      buAmount: '1000000', //write about\n      metadata: '746573742073656e64206275',\n    });\n\n\n    if (operationInfo.errorCode !== 0) {\n      console.log(operationInfo);\n      return;\n    }\n\n\n    const operationItem = operationInfo.result.operation;\n\n    console.log(operationItem);\n\n    const accountInfo = await sdk.account.getNonce('buQgvdDfUjmK56K73ba8kqnE1d8azzCRYM9G');\n    if (accountInfo.errorCode !== 0) {\n      console.log(accountInfo);\n      return;\n    }\n    let non = accountInfo.result.nonce;\n    let nonc = parseInt(non.substring(0)) + 1;\n    let nonce = String(nonc);\n\n    console.log(nonce);\n\n\n    const blobInfo = sdk.transaction.buildBlob({\n      sourceAddress: 'buQgvdDfUjmK56K73ba8kqnE1d8azzCRYM9G',\n      gasPrice: '1000',\n      feeLimit: '306000',\n      nonce,\n      operations: [operationItem],\n\n    });\n\n    console.log(blobInfo.errorCode);\n\n    if (blobInfo.errorCode !== 0) {\n      console.log(blobInfo.toString());\n      return;\n    }\n\n\n\n    const blob = blobInfo.result.transactionBlob;\n    console.log(blob);\n    const blobHexFormat = await this.convertToHex(blob)\n    this.setState({ blob: blobHexFormat })\n\n    const signatureInfo = sdk.transaction.sign({\n      privateKeys: ['privbtEELf99kKzMAPJU17ceYzz5d6y8Y5gbEKc7WySG9NRAEmGibkiG'],\n      blob: blobHexFormat,\n    });\n\n\n    if (signatureInfo.errorCode !== 0) {\n      console.log(signatureInfo);\n      return;\n    }\n\n    const signature = signatureInfo.result.signatures;\n\n    console.log(signature);\n\n\n\n    const transactionInfo = sdk.transaction.submit({\n      blob: blobHexFormat,\n      signature: signature,\n    }).then(transactionInfo => {\n      console.log(transactionInfo)\n      var txHash = transactionInfo.result.hash;\n      this.setState({ txHash: txHash })\n    }).catch(err => {\n      console.log(err.message)\n    });\n\n\n\n    this.refs.btn2.setAttribute(\"disabled\", \"disabled\");\n\n\n  }\n\n  handleCreateAssest = async (e) => {\n\n\n    const atp10TokenMetadata = {\n      version: '1.0',\n      name: 'Test',\n      nowSupply: '0',\n      decimals: '1',\n      description: 'testing',\n    };\n\n\n    const operationInfo = sdk.operation.assetIssueOperation({\n      sourceAddress: 'buQgvdDfUjmK56K73ba8kqnE1d8azzCRYM9G',\n      code: atp10TokenMetadata.name,\n      assetAmount: '10000',\n      metadata: \"atp10TokenMetadata\",\n    });\n\n\n    if (operationInfo.errorCode !== 0) {\n      console.log(operationInfo);\n      return;\n    }\n\n\n    const operationItem = operationInfo.result.operation;\n\n    console.log(operationItem);\n\n    const accountInfo = await sdk.account.getNonce('buQgvdDfUjmK56K73ba8kqnE1d8azzCRYM9G');\n    if (accountInfo.errorCode !== 0) {\n      console.log(accountInfo);\n      return;\n    }\n    let non = accountInfo.result.nonce;\n    let nonc = parseInt(non.substring(0)) + 1;\n    let nonce = String(nonc);\n\n    console.log(nonce);\n\n    const blobInfo = sdk.transaction.buildBlob({\n      sourceAddress: this.state.address,\n      gasPrice: '10000',\n      feeLimit: '500021200000',\n      nonce,\n      operations: [operationItem],\n\n\n    });\n\n    console.log(blobInfo.errorCode);\n\n    if (blobInfo.errorCode !== 0) {\n      console.log(blobInfo);\n      return;\n    }\n\n\n    const blob = blobInfo.result.transactionBlob;\n    const AssetHexFormat = await this.convertToHex(blob)\n\n\n    console.log(blob);\n\n    let signatureInfo = sdk.transaction.sign({\n      privateKeys: ['privbtEELf99kKzMAPJU17ceYzz5d6y8Y5gbEKc7WySG9NRAEmGibkiG'],\n      blob: AssetHexFormat,\n    });\n\n\n    if (signatureInfo.errorCode !== 0) {\n      console.log(signatureInfo);\n      return;\n    }\n\n    const signature = signatureInfo.result.signatures;\n\n    console.log(signature);\n\n\n\n    const transactionInfo = sdk.transaction.submit({\n      blob: AssetHexFormat,\n      signature: signature,\n    }).then(info => {\n      console.log(info);\n    }).catch(err => {\n      console.log(err.message);\n    });\n\n\n    if (transactionInfo.errorCode !== 0) {\n      console.log(transactionInfo);\n    }\n\n  }\n\n  handleCheckBalance = async (e) => {\n\n   const address = this.state.address\n    //const address = 'buQgvdDfUjmK56K73ba8kqnE1d8azzCRYM9G'\n    await sdk.account.getInfo(address).then(data => {\n      console.log(data)\n      var balance = data.result.balance;\n      this.setState({ balance: balance })\n      var assests = data.result.assests;\n      this.setState({ assests: assests })\n    }).catch(err => {\n      console.log(err.message)\n    });\n  }\n\n  handleBuildWebsite = async (e) => {\n    window.location = 'https://explorer.bumotest.io/account/' + this.state.address;\n  }\n\n\n\n\n\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\"\n        >\n          <img src={bumo} />\n          <p>\n            Click Button To create private public keys.\n          </p>\n          <p>Your Address = {this.state.address} </p>\n          <p>Your Private Key = {this.state.privateKey}</p>\n\n          <button\n            className=\"button is-primary\"\n            onClick={() => this.handleAccountCreation()}\n            ref=\"btn\">\n            Create Account\n        </button>\n\n\n          <button\n            className=\"button is-primary\"\n            onClick={() => this.handleFundAccount()}\n            ref=\"btn2\"\n          >\n            Fund Account\n        </button>\n          <p>{this.state.transactionInfo}</p>\n\n          <button\n            className=\"button is-primary\"\n            onClick={() => this.handleCreateAssest()}\n          >\n            Create Assest\n        </button>\n          <button\n            className=\"button is-primary\"\n            onClick={() => this.handleCheckBalance()}\n            href='https://explorer.bumotest.io/'\n          >\n            Check Balance\n        </button>\n          <p>balance = {this.state.balance}</p>\n          <p>assests = {this.state.assests}</p>\n          <a onClick={() => this.handleBuildWebsite()} className=\"button is-primary\">\n            View on BlockExplorer\n        </a>\n\n\n\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n\n\n//privbxcr3H9WbfZwpmB7nVFdPinJFS22i7ifM7z5ikGxQKJWkxnze2Q1\n"]},"metadata":{},"sourceType":"module"}