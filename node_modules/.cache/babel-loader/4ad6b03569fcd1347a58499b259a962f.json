{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/jesse/Desktop/blockx/bumodapp/node_modules/@babel/runtime/regenerator\");\n\nvar is = require('is-type-of');\n\nvar errors = require('../exception');\n\nvar proto = exports;\n\nproto.contractCreateOperation = function (args) {\n  try {\n    if (is.array(args) || !is.object(args)) {\n      return this._responseError(errors.INVALID_ARGUMENTS);\n    }\n\n    var schema = {\n      initBalance: {\n        required: true,\n        numeric: true\n      },\n      sourceAddress: {\n        required: false,\n        string: true,\n        address: true\n      },\n      metadata: {\n        required: false,\n        string: true\n      },\n      initInput: {\n        required: false,\n        string: true\n      }\n    };\n\n    if (!this._validate(args, schema).tag) {\n      var msg = this._validate(args, schema).msg;\n\n      return this._responseError(errors[msg]);\n    }\n\n    if (!is.string(args.payload) || args.payload.trim().length === 0) {\n      return this._responseError(errors.PAYLOAD_EMPTY_ERROR);\n    }\n\n    return this._responseData({\n      operation: {\n        type: 'contractCreate',\n        data: args\n      }\n    });\n  } catch (err) {\n    throw err;\n  }\n};\n\nproto.contractInvokeByAssetOperation =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee(args) {\n  var schema, msg, isContractAddress;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n\n          if (!(is.array(args) || !is.object(args))) {\n            _context.next = 3;\n            break;\n          }\n\n          return _context.abrupt(\"return\", this._responseError(errors.INVALID_ARGUMENTS));\n\n        case 3:\n          schema = {\n            contractAddress: {\n              required: true,\n              address: true\n            },\n            sourceAddress: {\n              required: false,\n              address: true\n            },\n            code: {\n              required: false,\n              string: true\n            },\n            issuer: {\n              required: false,\n              address: true\n            },\n            metadata: {\n              required: false,\n              string: true\n            },\n            input: {\n              required: false,\n              string: true\n            }\n          };\n\n          if (this._validate(args, schema).tag) {\n            _context.next = 7;\n            break;\n          }\n\n          msg = this._validate(args, schema).msg;\n          return _context.abrupt(\"return\", this._responseError(errors[msg]));\n\n        case 7:\n          if (is.undefined(args.assetAmount)) {\n            _context.next = 10;\n            break;\n          }\n\n          if (this._isAvailableValue(args.assetAmount)) {\n            _context.next = 10;\n            break;\n          }\n\n          return _context.abrupt(\"return\", this._responseError(errors.INVALID_CONTRACT_ASSET_AMOUNT_ERROR));\n\n        case 10:\n          if (!(args.sourceAddress && args.contractAddress === args.sourceAddress)) {\n            _context.next = 12;\n            break;\n          }\n\n          return _context.abrupt(\"return\", this._responseError(errors.SOURCEADDRESS_EQUAL_CONTRACTADDRESS_ERROR));\n\n        case 12:\n          _context.next = 14;\n          return this._isContractAddress(args.contractAddress);\n\n        case 14:\n          isContractAddress = _context.sent;\n\n          if (isContractAddress) {\n            _context.next = 17;\n            break;\n          }\n\n          return _context.abrupt(\"return\", this._responseError(errors.CONTRACTADDRESS_NOT_CONTRACTACCOUNT_ERROR));\n\n        case 17:\n          return _context.abrupt(\"return\", this._responseData({\n            operation: {\n              type: 'contractInvokeByAsset',\n              data: args\n            }\n          }));\n\n        case 20:\n          _context.prev = 20;\n          _context.t0 = _context[\"catch\"](0);\n          throw _context.t0;\n\n        case 23:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee, this, [[0, 20]]);\n});\nproto.contractInvokeByBUOperation =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee2(args) {\n  var schema, msg, isContractAddress;\n  return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n\n          if (!(is.array(args) || !is.object(args))) {\n            _context2.next = 3;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", this._responseError(errors.INVALID_ARGUMENTS));\n\n        case 3:\n          schema = {\n            contractAddress: {\n              required: true,\n              address: true\n            },\n            sourceAddress: {\n              required: false,\n              address: true\n            },\n            input: {\n              required: false,\n              string: true\n            },\n            metadata: {\n              required: false,\n              string: true\n            }\n          };\n\n          if (this._validate(args, schema).tag) {\n            _context2.next = 7;\n            break;\n          }\n\n          msg = this._validate(args, schema).msg;\n          return _context2.abrupt(\"return\", this._responseError(errors[msg]));\n\n        case 7:\n          if (is.undefined(args.buAmount)) {\n            _context2.next = 10;\n            break;\n          }\n\n          if (this._isAvailableValue(args.buAmount)) {\n            _context2.next = 10;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", this._responseError(errors.INVALID_CONTRACT_BU_AMOUNT_ERROR));\n\n        case 10:\n          if (!(args.sourceAddress && args.contractAddress === args.sourceAddress)) {\n            _context2.next = 12;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", this._responseError(errors.SOURCEADDRESS_EQUAL_CONTRACTADDRESS_ERROR));\n\n        case 12:\n          _context2.next = 14;\n          return this._isContractAddress(args.contractAddress);\n\n        case 14:\n          isContractAddress = _context2.sent;\n\n          if (isContractAddress) {\n            _context2.next = 17;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", this._responseError(errors.CONTRACTADDRESS_NOT_CONTRACTACCOUNT_ERROR));\n\n        case 17:\n          return _context2.abrupt(\"return\", this._responseData({\n            operation: {\n              type: 'contractInvokeByBU',\n              data: args\n            }\n          }));\n\n        case 20:\n          _context2.prev = 20;\n          _context2.t0 = _context2[\"catch\"](0);\n          throw _context2.t0;\n\n        case 23:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _callee2, this, [[0, 20]]);\n});","map":null,"metadata":{},"sourceType":"script"}