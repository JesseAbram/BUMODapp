{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/jesse/Desktop/blockx/bumodapp/node_modules/@babel/runtime/regenerator\");\n\nvar wrap = require('co-wrap-all');\n\nvar is = require('is-type-of');\n\nvar merge = require('merge-descriptors');\n\nvar long = require('long');\n\nvar JSONbig = require('json-bigint');\n\nvar _require = require('bumo-encryption'),\n    keypair = _require.keypair;\n\nvar errors = require('../exception');\n\nmodule.exports = Account;\n\nfunction Account(options) {\n  if (!(this instanceof Account)) {\n    return new Account(options);\n  }\n\n  this.options = options;\n}\n\nvar proto = Account.prototype;\nmerge(proto, require('../common/util'));\n/**\n * Create account\n * @return {Object}\n */\n\nproto.create =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee() {\n  var kp, privateKey, publicKey, address;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          kp = keypair.getKeyPair();\n          privateKey = kp.encPrivateKey;\n          publicKey = kp.encPublicKey;\n          address = kp.address;\n          return _context.abrupt(\"return\", this._responseData({\n            privateKey: privateKey,\n            publicKey: publicKey,\n            address: address\n          }));\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee, this);\n});\n/**\n * Check address\n * @param {String} address\n * @return {Boolean}\n */\n\nproto.checkValid =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee2(address) {\n  var isValid;\n  return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          isValid = keypair.checkAddress(address);\n          return _context2.abrupt(\"return\", this._responseData({\n            isValid: isValid\n          }));\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _callee2, this);\n});\n/**\n * Get account information\n * @param  {String} address\n * @return {Object}\n */\n\nproto.getInfo =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee3(address) {\n  var res, nonce;\n  return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          if (keypair.checkAddress(address)) {\n            _context3.next = 2;\n            break;\n          }\n\n          return _context3.abrupt(\"return\", this._responseError(errors.INVALID_ADDRESS_ERROR));\n\n        case 2:\n          _context3.next = 4;\n          return this._request('get', 'getAccount', {\n            address: address\n          });\n\n        case 4:\n          res = _context3.sent;\n\n          if (!(res.error_code !== 0)) {\n            _context3.next = 7;\n            break;\n          }\n\n          return _context3.abrupt(\"return\", this._responseError(errors.ACCOUNT_NOT_EXIST));\n\n        case 7:\n          nonce = res.result.nonce;\n          nonce = nonce ? nonce : '0';\n          return _context3.abrupt(\"return\", this._responseData({\n            address: res.result.address,\n            balance: res.result.balance,\n            nonce: nonce,\n            assets: res.result.assets || [],\n            priv: res.result.priv || {}\n          }));\n\n        case 10:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _callee3, this);\n});\n/**\n * Get account balance\n * @param  {String} address\n * @return {Object}\n */\n\nproto.getBalance =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee4(address) {\n  var info;\n  return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          if (keypair.checkAddress(address)) {\n            _context4.next = 2;\n            break;\n          }\n\n          return _context4.abrupt(\"return\", this._responseError(errors.INVALID_ADDRESS_ERROR));\n\n        case 2:\n          _context4.next = 4;\n          return this.getInfo(address);\n\n        case 4:\n          info = _context4.sent;\n\n          if (!(info.errorCode === 0)) {\n            _context4.next = 7;\n            break;\n          }\n\n          return _context4.abrupt(\"return\", this._responseData({\n            balance: info.result.balance\n          }));\n\n        case 7:\n          return _context4.abrupt(\"return\", this._responseError(errors.ACCOUNT_NOT_EXIST));\n\n        case 8:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _callee4, this);\n});\n/**\n * Get nonce\n * @param  {String} address\n * @return {Object}\n */\n\nproto.getNonce =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee5(address) {\n  var info;\n  return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          if (keypair.checkAddress(address)) {\n            _context5.next = 2;\n            break;\n          }\n\n          return _context5.abrupt(\"return\", this._responseError(errors.INVALID_ADDRESS_ERROR));\n\n        case 2:\n          _context5.next = 4;\n          return this.getInfo(address);\n\n        case 4:\n          info = _context5.sent;\n\n          if (!(info.errorCode === 0)) {\n            _context5.next = 7;\n            break;\n          }\n\n          return _context5.abrupt(\"return\", this._responseData({\n            nonce: info.result.nonce\n          }));\n\n        case 7:\n          return _context5.abrupt(\"return\", this._responseError(errors.ACCOUNT_NOT_EXIST));\n\n        case 8:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _callee5, this);\n});\nproto.getAssets =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee6(address) {\n  var info;\n  return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          if (keypair.checkAddress(address)) {\n            _context6.next = 2;\n            break;\n          }\n\n          return _context6.abrupt(\"return\", this._responseError(errors.INVALID_ADDRESS_ERROR));\n\n        case 2:\n          _context6.next = 4;\n          return this.getInfo(address);\n\n        case 4:\n          info = _context6.sent;\n\n          if (!(info.errorCode === 0)) {\n            _context6.next = 7;\n            break;\n          }\n\n          return _context6.abrupt(\"return\", this._responseData({\n            assets: info.result.assets\n          }));\n\n        case 7:\n          return _context6.abrupt(\"return\", this._responseError(errors.ACCOUNT_NOT_EXIST));\n\n        case 8:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _callee6, this);\n});\n/**\n * Get account metadata\n * @param args\n * @return {Object}\n */\n\nproto.getMetadata =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee7(args) {\n  var schema, msg, address, key, info, data, metadata, metadatas;\n  return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          if (!(is.array(args) || !is.object(args))) {\n            _context7.next = 2;\n            break;\n          }\n\n          return _context7.abrupt(\"return\", this._responseError(errors.INVALID_ARGUMENTS));\n\n        case 2:\n          schema = {\n            address: {\n              required: true,\n              address: true\n            },\n            key: {\n              required: true,\n              string: true\n            }\n          };\n\n          if (this._validate(args, schema).tag) {\n            _context7.next = 6;\n            break;\n          }\n\n          msg = this._validate(args, schema).msg;\n          return _context7.abrupt(\"return\", this._responseError(errors[msg]));\n\n        case 6:\n          address = args.address;\n          key = args.key;\n          _context7.next = 10;\n          return this._request('get', 'getAccount', {\n            address: address,\n            key: key\n          });\n\n        case 10:\n          info = _context7.sent;\n\n          if (!(info.error_code !== 0)) {\n            _context7.next = 13;\n            break;\n          }\n\n          return _context7.abrupt(\"return\", this._responseError(errors.ACCOUNT_NOT_EXIST));\n\n        case 13:\n          data = info.result;\n          metadata = {};\n          metadatas = data.metadatas;\n\n          if (metadatas && is.array(metadatas) && metadatas.length > 0) {\n            metadatas.some(function (item) {\n              if (item.key === key) {\n                metadata.key = item.key;\n                metadata.value = item.value;\n                metadata.version = item.version;\n                return true;\n              }\n            });\n          }\n\n          return _context7.abrupt(\"return\", this._responseData({\n            metadata: metadata\n          }));\n\n        case 18:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _callee7, this);\n});\nproto.isActivated =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee8(address) {\n  var schema, arg, msg, info, isActivated;\n  return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          if (!is.undefined(address)) {\n            _context8.next = 2;\n            break;\n          }\n\n          return _context8.abrupt(\"return\", this._responseError(errors.INVALID_ARGUMENTS));\n\n        case 2:\n          schema = {\n            address: {\n              required: true,\n              address: true\n            }\n          };\n          arg = {\n            address: address\n          };\n\n          if (this._validate(arg, schema).tag) {\n            _context8.next = 7;\n            break;\n          }\n\n          msg = this._validate(arg, schema).msg;\n          return _context8.abrupt(\"return\", this._responseError(errors[msg]));\n\n        case 7:\n          _context8.next = 9;\n          return this._request('get', 'getAccount', {\n            address: address\n          });\n\n        case 9:\n          info = _context8.sent;\n          isActivated = false;\n\n          if (info.error_code === 0) {\n            isActivated = true;\n          }\n\n          return _context8.abrupt(\"return\", this._responseData({\n            isActivated: isActivated\n          }));\n\n        case 13:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _callee8, this);\n});\nwrap(proto);","map":null,"metadata":{},"sourceType":"script"}