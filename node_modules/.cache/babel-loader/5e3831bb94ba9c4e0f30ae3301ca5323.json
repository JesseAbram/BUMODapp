{"ast":null,"code":"import _regeneratorRuntime from \"/Users/jesse/Desktop/blockx/BUMODapp/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jesse/Desktop/blockx/BUMODapp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/jesse/Desktop/blockx/BUMODapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jesse/Desktop/blockx/BUMODapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jesse/Desktop/blockx/BUMODapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jesse/Desktop/blockx/BUMODapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jesse/Desktop/blockx/BUMODapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/jesse/Desktop/blockx/BUMODapp/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/jesse/Desktop/blockx/BUMODapp/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport BumoSDK from 'bumo-sdk';\nimport 'bulma/css/bulma.css';\nimport { handleFundAccount } from './utils.js';\nvar sdk = new BumoSDK({\n  host: 'seed1.bumotest.io:26002'\n});\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.convertToHex = function (blob) {\n      var buffer = blob.split(',').map(function (e) {\n        return Number(e);\n      });\n      return Array.prototype.map.call(new Uint8Array(buffer), function (x) {\n        return ('00' + x.toString(16)).slice(-2);\n      }).join('');\n    };\n\n    _this.handleAccountCreation =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this.refs.btn.setAttribute(\"disabled\", \"disabled\");\n\n                sdk.account.create().then(function (data) {\n                  console.log(data);\n                  var address = data.result.address;\n\n                  _this.setState({\n                    address: address\n                  });\n\n                  var privateKey = data.result.privateKey;\n\n                  _this.setState({\n                    privateKey: JSON.stringify(privateKey)\n                  });\n                }).catch(function (err) {\n                  console.log(err.message);\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.handleFundAccount =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(e) {\n        var operationInfo, operationItem, accountInfo, non, nonc, nonce, blobInfo, blob, blobHexFormat, signatureInfo, signature, transactionInfo;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                operationInfo = sdk.operation.buSendOperation({\n                  destAddress: _this.state.address,\n                  buAmount: '100000000',\n                  //write about\n                  metadata: '746573742073656e64206275'\n                });\n\n                if (!(operationInfo.errorCode !== 0)) {\n                  _context2.next = 4;\n                  break;\n                }\n\n                console.log(operationInfo);\n                return _context2.abrupt(\"return\");\n\n              case 4:\n                operationItem = operationInfo.result.operation;\n                console.log(operationItem);\n                _context2.next = 8;\n                return sdk.account.getNonce('buQgvdDfUjmK56K73ba8kqnE1d8azzCRYM9G');\n\n              case 8:\n                accountInfo = _context2.sent;\n\n                if (!(accountInfo.errorCode !== 0)) {\n                  _context2.next = 12;\n                  break;\n                }\n\n                console.log(accountInfo);\n                return _context2.abrupt(\"return\");\n\n              case 12:\n                non = accountInfo.result.nonce;\n                nonc = parseInt(non.substring(0)) + 1;\n                nonce = String(nonc);\n                console.log(nonce);\n\n                _this.setState({\n                  nonce: nonce\n                });\n\n                blobInfo = sdk.transaction.buildBlob({\n                  sourceAddress: 'buQgvdDfUjmK56K73ba8kqnE1d8azzCRYM9G',\n                  gasPrice: '1000',\n                  feeLimit: '306000',\n                  nonce: nonce,\n                  operations: [operationItem]\n                });\n                console.log(blobInfo.errorCode);\n\n                if (!(blobInfo.errorCode !== 0)) {\n                  _context2.next = 22;\n                  break;\n                }\n\n                console.log(blobInfo.toString());\n                return _context2.abrupt(\"return\");\n\n              case 22:\n                blob = blobInfo.result.transactionBlob;\n                console.log(blob);\n                _context2.next = 26;\n                return _this.convertToHex(blob);\n\n              case 26:\n                blobHexFormat = _context2.sent;\n\n                _this.setState({\n                  blob: blobHexFormat\n                });\n\n                signatureInfo = sdk.transaction.sign({\n                  privateKeys: ['privbtEELf99kKzMAPJU17ceYzz5d6y8Y5gbEKc7WySG9NRAEmGibkiG'],\n                  blob: blobHexFormat\n                });\n\n                if (!(signatureInfo.errorCode !== 0)) {\n                  _context2.next = 32;\n                  break;\n                }\n\n                console.log(signatureInfo);\n                return _context2.abrupt(\"return\");\n\n              case 32:\n                signature = signatureInfo.result.signatures;\n                console.log(signature);\n                _context2.prev = 34;\n                _context2.next = 37;\n                return sdk.transaction.submit({\n                  blob: blobHexFormat,\n                  signature: signature\n                });\n\n              case 37:\n                transactionInfo = _context2.sent;\n\n                if (transactionInfo.errorCode !== 0) {\n                  console.log(\"Error code not 0 \", transactionInfo);\n                }\n\n                console.log(transactionInfo);\n\n                _this.setState({\n                  transactionInfo: transactionInfo\n                });\n\n                _context2.next = 46;\n                break;\n\n              case 43:\n                _context2.prev = 43;\n                _context2.t0 = _context2[\"catch\"](34);\n                console.log(\"Error \", _context2.t0);\n\n              case 46:\n                _this.refs.btn2.setAttribute(\"disabled\", \"disabled\");\n\n              case 47:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[34, 43]]);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.state = {\n      address: null,\n      privateKey: null,\n      blob: null,\n      nonce: null,\n      transactionInfo: null\n    };\n    _this.handleFundAccount = _this.handleFundAccount.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.convertToHex = _this.convertToHex.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"Click Button To create private public keys.\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"Your Address = \", this.state.address, \" \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"Your Private Key = \", this.state.privateKey), React.createElement(\"button\", {\n        className: \"button is-primary\",\n        onClick: function onClick() {\n          return _this2.handleAccountCreation();\n        },\n        ref: \"btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"Create Account\"), React.createElement(\"button\", {\n        className: \"button is-primary\",\n        onClick: function onClick() {\n          return _this2.handleFundAccount();\n        },\n        ref: \"btn2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"Fund Account\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, this.state.blob), React.createElement(\"button\", {\n        className: \"button is-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"Create Assest\"), React.createElement(\"button\", {\n        className: \"button is-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, \"Check Balance\")));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App; //privbxcr3H9WbfZwpmB7nVFdPinJFS22i7ifM7z5ikGxQKJWkxnze2Q1","map":{"version":3,"sources":["/Users/jesse/Desktop/blockx/BUMODapp/src/App.js"],"names":["React","Component","BumoSDK","handleFundAccount","sdk","host","App","props","convertToHex","blob","buffer","split","map","e","Number","Array","prototype","call","Uint8Array","x","toString","slice","join","handleAccountCreation","refs","btn","setAttribute","account","create","then","data","console","log","address","result","setState","privateKey","JSON","stringify","catch","err","message","operationInfo","operation","buSendOperation","destAddress","state","buAmount","metadata","errorCode","operationItem","getNonce","accountInfo","non","nonce","nonc","parseInt","substring","String","blobInfo","transaction","buildBlob","sourceAddress","gasPrice","feeLimit","operations","transactionBlob","blobHexFormat","signatureInfo","sign","privateKeys","signature","signatures","submit","transactionInfo","btn2","bind","logo"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport BumoSDK from 'bumo-sdk';\nimport 'bulma/css/bulma.css';\nimport { handleFundAccount } from './utils.js'\n\n\n\nconst sdk = new BumoSDK({\n  host: 'seed1.bumotest.io:26002',\n})\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      address: null,\n      privateKey: null,\n      blob: null,\n      nonce: null,\n      transactionInfo: null\n    }\n\n    this.handleFundAccount = this.handleFundAccount.bind(this);\n    this.convertToHex = this.convertToHex.bind(this);\n\n  }\n\n  convertToHex = (blob) => {\n    const buffer = blob.split(',').map(e => Number(e))\n    return Array.prototype.map.call(new Uint8Array(buffer), x => ('00' + x.toString(16)).slice(-2)).join('');\n  }\n\n  handleAccountCreation = async (e) => {\n    this.refs.btn.setAttribute(\"disabled\", \"disabled\");\n\n    sdk.account.create().then(data => {\n      console.log(data)\n      var address = data.result.address;\n      this.setState({ address: address })\n      var privateKey = data.result.privateKey;\n      this.setState({ privateKey: JSON.stringify(privateKey) })\n    }).catch(err => {\n      console.log(err.message)\n    });\n  }\n\n\n\n  handleFundAccount = async (e) => {\n\n    \n\n\n    const operationInfo = sdk.operation.buSendOperation({\n      destAddress: this.state.address,\n      buAmount: '100000000', //write about\n      metadata: '746573742073656e64206275',\n    });\n\n\n    if (operationInfo.errorCode !== 0) {\n      console.log(operationInfo);\n      return;\n    }\n\n\n    const operationItem = operationInfo.result.operation;\n\n    console.log(operationItem);\n   \n    const accountInfo = await sdk.account.getNonce('buQgvdDfUjmK56K73ba8kqnE1d8azzCRYM9G');\n    if (accountInfo.errorCode !== 0) {\n      console.log(accountInfo);\n      return;\n    }\n    let non = accountInfo.result.nonce;\n    let nonc = parseInt(non.substring(0)) + 1;\n    let nonce = String(nonc);\n\n    console.log(nonce);\n    this.setState({ nonce: nonce})\n  \n\n    const blobInfo = sdk.transaction.buildBlob({\n      sourceAddress: 'buQgvdDfUjmK56K73ba8kqnE1d8azzCRYM9G',\n      gasPrice: '1000',\n      feeLimit: '306000',\n      nonce,\n      operations: [operationItem],\n\n    });\n\n    console.log(blobInfo.errorCode);\n\n    if (blobInfo.errorCode !== 0) {\n      console.log(blobInfo.toString());\n      return;\n    }\n\n\n\n    const blob = blobInfo.result.transactionBlob;\n    console.log(blob);\n    const blobHexFormat = await this.convertToHex(blob)\n    this.setState({ blob: blobHexFormat })\n\n    const signatureInfo = sdk.transaction.sign({\n      privateKeys: ['privbtEELf99kKzMAPJU17ceYzz5d6y8Y5gbEKc7WySG9NRAEmGibkiG'],\n      blob: blobHexFormat,\n    });\n\n\n    if (signatureInfo.errorCode !== 0) {\n      console.log(signatureInfo);\n      return;\n    }\n\n    const signature = signatureInfo.result.signatures;\n\n    console.log(signature);\n\n\n    try {\n      const transactionInfo = await sdk.transaction.submit({\n        blob: blobHexFormat,\n        signature: signature,\n      })\n\n      if (transactionInfo.errorCode !== 0) {\n        console.log(\"Error code not 0 \",transactionInfo);\n      }\n      console.log(transactionInfo);\n      this.setState( {transactionInfo: transactionInfo} )\n    } catch (e) {\n      console.log(\"Error \", e);\n    }\n    this.refs.btn2.setAttribute(\"disabled\", \"disabled\");\n\n\n  }\n\n\n\n\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\"\n       >\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Click Button To create private public keys.\n          </p>\n          <p>Your Address = {this.state.address} </p>\n          <p>Your Private Key = {this.state.privateKey}</p>\n\n          <button\n            className=\"button is-primary\"\n            onClick={() => this.handleAccountCreation()}\n            ref=\"btn\">\n            Create Account\n        </button>\n\n       \n          <button\n            className=\"button is-primary\"\n            onClick={() => this.handleFundAccount()}\n            ref=\"btn2\"\n          >\n            Fund Account\n        </button>\n          <p>{this.state.blob}</p>\n\n          <button\n            className=\"button is-primary\"\n          >\n            Create Assest\n        </button>\n          <button\n            className=\"button is-primary\"\n          >\n            Check Balance\n        </button>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n\n\n//privbxcr3H9WbfZwpmB7nVFdPinJFS22i7ifM7z5ikGxQKJWkxnze2Q1\n"]},"metadata":{},"sourceType":"module"}