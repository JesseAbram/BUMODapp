{"ast":null,"code":"import _regeneratorRuntime from \"/Users/jesse/Desktop/blockx/bumodapp/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jesse/Desktop/blockx/bumodapp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nexport var handleFundAccount =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(e) {\n    var BumoSDK, sdk, operationInfo, operationItem, blobInfo, blob, signatureInfo, signature, transactionInfo;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            BumoSDK = require('bumo-sdk');\n            sdk = new BumoSDK({\n              host: '0.0.0.0:36002'\n            });\n            operationInfo = sdk.operation.buSendOperation({\n              destAddress: 'buQsBMbFNH3NRJBbFRCPWDzjx7RqRc1hhvn1',\n              buAmount: '1',\n              metadata: '746573742073656e64206275'\n            });\n\n            if (!(operationInfo.errorCode !== 0)) {\n              _context.next = 6;\n              break;\n            }\n\n            console.log(operationInfo);\n            return _context.abrupt(\"return\");\n\n          case 6:\n            operationItem = operationInfo.result.operation;\n            console.log(operationItem);\n            blobInfo = sdk.transaction.buildBlob({\n              sourceAddress: 'buQgvdDfUjmK56K73ba8kqnE1d8azzCRYM9G',\n              gasPrice: '1000',\n              feeLimit: '306000',\n              nonce: '5',\n              operations: [operationItem]\n            });\n            console.log(blobInfo.errorCode);\n\n            if (!(blobInfo.errorCode !== 0)) {\n              _context.next = 13;\n              break;\n            }\n\n            console.log(blobInfo);\n            return _context.abrupt(\"return\");\n\n          case 13:\n            blob = blobInfo.result.transactionBlob;\n            console.log(blob);\n            signatureInfo = sdk.transaction.sign({\n              privateKeys: ['privbtEELf99kKzMAPJU17ceYzz5d6y8Y5gbEKc7WySG9NRAEmGibkiG'],\n              blob: blob\n            });\n\n            if (!(signatureInfo.errorCode !== 0)) {\n              _context.next = 19;\n              break;\n            }\n\n            console.log(signatureInfo);\n            return _context.abrupt(\"return\");\n\n          case 19:\n            signature = signatureInfo.result.signatures;\n            console.log(signature);\n            transactionInfo = sdk.transaction.submit({\n              blob: blob,\n              signature: signature\n            }).then(function (info) {\n              console.log(info);\n            }).catch(function (err) {\n              console.log(err.message);\n            });\n\n            if (transactionInfo.errorCode !== 0) {\n              console.log(transactionInfo);\n            }\n\n            console.log(transactionInfo);\n\n          case 24:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n\n  return function handleFundAccount(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/Users/jesse/Desktop/blockx/bumodapp/src/utils.js"],"names":["handleFundAccount","e","BumoSDK","require","sdk","host","operationInfo","operation","buSendOperation","destAddress","buAmount","metadata","errorCode","console","log","operationItem","result","blobInfo","transaction","buildBlob","sourceAddress","gasPrice","feeLimit","nonce","operations","blob","transactionBlob","signatureInfo","sign","privateKeys","signature","signatures","transactionInfo","submit","then","info","catch","err","message"],"mappings":";;AACA,OAAO,IAAMA,iBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,iBAAOC,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAEvBC,YAAAA,OAFuB,GAEbC,OAAO,CAAC,UAAD,CAFM;AAIzBC,YAAAA,GAJyB,GAInB,IAAIF,OAAJ,CAAY;AACtBG,cAAAA,IAAI,EAAE;AADgB,aAAZ,CAJmB;AASzBC,YAAAA,aATyB,GASTF,GAAG,CAACG,SAAJ,CAAcC,eAAd,CAA8B;AAClDC,cAAAA,WAAW,EAAE,sCADqC;AAElDC,cAAAA,QAAQ,EAAE,GAFwC;AAGlDC,cAAAA,QAAQ,EAAC;AAHyC,aAA9B,CATS;;AAAA,kBAgB3BL,aAAa,CAACM,SAAd,KAA4B,CAhBD;AAAA;AAAA;AAAA;;AAiB7BC,YAAAA,OAAO,CAACC,GAAR,CAAYR,aAAZ;AAjB6B;;AAAA;AAsBzBS,YAAAA,aAtByB,GAsBTT,aAAa,CAACU,MAAd,CAAqBT,SAtBZ;AAwB/BM,YAAAA,OAAO,CAACC,GAAR,CAAYC,aAAZ;AAEME,YAAAA,QA1ByB,GA0Bdb,GAAG,CAACc,WAAJ,CAAgBC,SAAhB,CAA0B;AACzCC,cAAAA,aAAa,EAAE,sCAD0B;AAEzCC,cAAAA,QAAQ,EAAE,MAF+B;AAGzCC,cAAAA,QAAQ,EAAE,QAH+B;AAIzCC,cAAAA,KAAK,EAAE,GAJkC;AAKzCC,cAAAA,UAAU,EAAE,CAAET,aAAF;AAL6B,aAA1B,CA1Bc;AAmC/BF,YAAAA,OAAO,CAACC,GAAR,CAAYG,QAAQ,CAACL,SAArB;;AAnC+B,kBAqC3BK,QAAQ,CAACL,SAAT,KAAuB,CArCI;AAAA;AAAA;AAAA;;AAsC7BC,YAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ;AAtC6B;;AAAA;AA2CzBQ,YAAAA,IA3CyB,GA2ClBR,QAAQ,CAACD,MAAT,CAAgBU,eA3CE;AA6C/Bb,YAAAA,OAAO,CAACC,GAAR,CAAYW,IAAZ;AAEIE,YAAAA,aA/C2B,GA+CXvB,GAAG,CAACc,WAAJ,CAAgBU,IAAhB,CAAqB;AACrCC,cAAAA,WAAW,EAAE,CAAE,0DAAF,CADwB;AAErCJ,cAAAA,IAAI,EAAJA;AAFqC,aAArB,CA/CW;;AAAA,kBAqDzBE,aAAa,CAACf,SAAd,KAA4B,CArDH;AAAA;AAAA;AAAA;;AAsD3BC,YAAAA,OAAO,CAACC,GAAR,CAAYa,aAAZ;AAtD2B;;AAAA;AA0DvBG,YAAAA,SA1DuB,GA0DXH,aAAa,CAACX,MAAd,CAAqBe,UA1DV;AA4D7BlB,YAAAA,OAAO,CAACC,GAAR,CAAYgB,SAAZ;AAIME,YAAAA,eAhEuB,GAgEL5B,GAAG,CAACc,WAAJ,CAAgBe,MAAhB,CAAuB;AAC5CR,cAAAA,IAAI,EAAJA,IAD4C;AAE5CK,cAAAA,SAAS,EAAEA;AAFiC,aAAvB,EAGpBI,IAHoB,CAGf,UAAAC,IAAI,EAAG;AACdtB,cAAAA,OAAO,CAACC,GAAR,CAAYqB,IAAZ;AACD,aALuB,EAKrBC,KALqB,CAKf,UAAAC,GAAG,EAAI;AACfxB,cAAAA,OAAO,CAACC,GAAR,CAAYuB,GAAG,CAACC,OAAhB;AACD,aAPwB,CAhEK;;AA0E5B,gBAAIN,eAAe,CAACpB,SAAhB,KAA8B,CAAlC,EAAqC;AACnCC,cAAAA,OAAO,CAACC,GAAR,CAAYkB,eAAZ;AACD;;AACDnB,YAAAA,OAAO,CAACC,GAAR,CAAYkB,eAAZ;;AA7E4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAjBhC,iBAAiB;AAAA;AAAA;AAAA,GAAvB","sourcesContent":["\nexport const handleFundAccount = async (e) => {\n  \n    const BumoSDK = require('bumo-sdk');\n  \n  const sdk = new BumoSDK({\n    host: '0.0.0.0:36002',\n  });\n  \n  \n  const operationInfo = sdk.operation.buSendOperation({\n    destAddress: 'buQsBMbFNH3NRJBbFRCPWDzjx7RqRc1hhvn1',\n    buAmount: '1',\n    metadata:'746573742073656e64206275',\n  });\n  \n  \n  if (operationInfo.errorCode !== 0) {\n    console.log(operationInfo);\n    return;\n  }\n  \n  \n  const operationItem = operationInfo.result.operation;\n  \n  console.log(operationItem);\n  \n  const blobInfo = sdk.transaction.buildBlob({\n    sourceAddress: 'buQgvdDfUjmK56K73ba8kqnE1d8azzCRYM9G',\n    gasPrice: '1000',\n    feeLimit: '306000',\n    nonce: '5',\n    operations: [ operationItem ],\n  \n  });\n  \n  console.log(blobInfo.errorCode);\n  \n  if (blobInfo.errorCode !== 0) {\n    console.log(blobInfo);\n    return;\n  }\n  \n  \n  const blob = blobInfo.result.transactionBlob;\n  \n  console.log(blob);\n  \n  let signatureInfo = sdk.transaction.sign({\n      privateKeys: [ 'privbtEELf99kKzMAPJU17ceYzz5d6y8Y5gbEKc7WySG9NRAEmGibkiG' ],\n      blob,\n    });\n  \n  \n    if (signatureInfo.errorCode !== 0) {\n      console.log(signatureInfo);\n      return;\n    }\n  \n    const signature = signatureInfo.result.signatures;\n  \n    console.log(signature);\n  \n  \n  \n    const transactionInfo = sdk.transaction.submit({\n       blob,\n       signature: signature,\n     }).then(info=> {\n      console.log(info);\n    }).catch(err => {\n     console.log(err.message);\n   });\n  \n  \n     if (transactionInfo.errorCode !== 0) {\n       console.log(transactionInfo);\n     }\n     console.log(transactionInfo);\n  \n    }\n    "]},"metadata":{},"sourceType":"module"}