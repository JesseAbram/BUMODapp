{"ast":null,"code":"'use strict';\n\nvar is = require('is-type-of');\n\nvar _require = require('bumo-encryption'),\n    keypair = _require.keypair;\n\nvar errors = require('../exception');\n\nvar proto = exports;\n\nproto.accountActivateOperation = function (args) {\n  try {\n    if (is.array(args) || !is.object(args)) {\n      return this._responseError(errors.INVALID_ARGUMENTS);\n    }\n\n    var schema = {\n      sourceAddress: {\n        required: false,\n        address: true\n      },\n      destAddress: {\n        required: true,\n        address: true\n      },\n      initBalance: {\n        required: true,\n        numeric: true\n      },\n      metadata: {\n        required: false,\n        string: true\n      }\n    };\n\n    if (!this._validate(args, schema).tag) {\n      var msg = this._validate(args, schema).msg;\n\n      return this._responseError(errors[msg]);\n    }\n\n    if (args.sourceAddress && args.destAddress === args.sourceAddress) {\n      return this._responseError(errors.SOURCEADDRESS_EQUAL_DESTADDRESS_ERROR);\n    }\n\n    return this._responseData({\n      operation: {\n        type: 'activateAccount',\n        data: args\n      }\n    });\n  } catch (err) {\n    throw err;\n  }\n};\n\nproto.accountSetMetadataOperation = function (args) {\n  try {\n    if (is.array(args) || !is.object(args)) {\n      return this._responseError(errors.INVALID_ARGUMENTS);\n    }\n\n    var schema = {\n      key: {\n        required: true,\n        string: true\n      },\n      sourceAddress: {\n        required: false,\n        address: true\n      },\n      deleteFlag: {\n        required: false,\n        boolean: true\n      },\n      metadata: {\n        required: false,\n        string: true\n      }\n    };\n\n    if (!this._validate(args, schema).tag) {\n      var msg = this._validate(args, schema).msg;\n\n      return this._responseError(errors[msg]);\n    }\n\n    var value = args.value;\n\n    if (!is.string(value) || value.trim().length === 0 || value.length > 256000) {\n      return this._responseError(errors.INVALID_DATAVALUE_ERROR);\n    }\n\n    if (args.version && !this._isAvailableValue(args.version)) {\n      return this._responseError(errors.INVALID_DATAVERSION_ERROR);\n    }\n\n    return this._responseData({\n      operation: {\n        type: 'accountSetMetadata',\n        data: args\n      }\n    });\n  } catch (err) {\n    throw err;\n  }\n};\n\nproto.accountSetPrivilegeOperation = function () {\n  var _this = this;\n\n  var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  try {\n    if (is.array(args) || !is.object(args)) {\n      return this._responseError(errors.INVALID_ARGUMENTS);\n    }\n\n    var schema = {\n      sourceAddress: {\n        required: false,\n        address: true\n      },\n      metadata: {\n        required: false,\n        string: true\n      }\n    };\n\n    if (!this._validate(args, schema).tag) {\n      var msg = this._validate(args, schema).msg;\n\n      return this._responseError(errors[msg]);\n    }\n\n    var maxInt32 = Math.pow(2, 32) - 1;\n\n    if (!is.undefined(args.masterWeight) && !this._isAvailableValue(args.masterWeight, -1, maxInt32)) {\n      return this._responseError(errors.INVALID_MASTERWEIGHT_ERROR);\n    }\n\n    if (!is.undefined(args.txThreshold) && !this._isAvailableValue(args.txThreshold)) {\n      return this._responseError(errors.INVALID_TX_THRESHOLD_ERROR);\n    }\n\n    var signers = args.signers;\n    var typeThresholds = args.typeThresholds;\n\n    if (is.array(signers) && signers.length > 0) {\n      var _msg = '';\n      signers.some(function (item) {\n        if (!keypair.checkAddress(item.address)) {\n          _msg = 'INVALID_SIGNER_ADDRESS_ERROR';\n          return true;\n        }\n\n        if (!_this._isAvailableValue(item.weight, -1, maxInt32)) {\n          _msg = 'INVALID_SIGNER_WEIGHT_ERROR';\n          return true;\n        }\n      });\n\n      if (_msg !== '') {\n        return this._responseError(errors[_msg]);\n      }\n    }\n\n    if (is.array(typeThresholds) && typeThresholds.length > 0) {\n      var _msg2 = '';\n      typeThresholds.some(function (item) {\n        if (!_this._isAvailableValue(item.type, -1, 100)) {\n          _msg2 = 'INVALID_OPERATION_TYPE_ERROR';\n          return true;\n        }\n\n        if (!_this._isAvailableValue(item.threshold)) {\n          _msg2 = 'INVALID_TYPE_THRESHOLD_ERROR';\n          return true;\n        }\n      });\n\n      if (_msg2 !== '') {\n        return this._responseError(errors[_msg2]);\n      }\n    }\n\n    return this._responseData({\n      operation: {\n        type: 'accountSetPrivilege',\n        data: args\n      }\n    });\n  } catch (err) {\n    throw err;\n  }\n};","map":null,"metadata":{},"sourceType":"script"}